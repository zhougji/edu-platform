{"version":3,"sources":["webpack:///./node_modules/engine.io-parser/build/esm/commons.js","webpack:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/index.js","webpack:///./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack:///./node_modules/engine.io-client/build/esm/globals.js","webpack:///./node_modules/engine.io-client/build/esm/util.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/engine.io-client/build/esm/transport.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack:///./node_modules/engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/engine.io-client/build/esm/socket.js","webpack:///./node_modules/engine.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/url.js","webpack:///./node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///./node_modules/socket.io-parser/build/esm/binary.js","webpack:///./node_modules/socket.io-parser/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/on.js","webpack:///./node_modules/socket.io-client/build/esm/socket.js","webpack:///./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///./node_modules/socket.io-client/build/esm/manager.js","webpack:///./node_modules/socket.io-client/build/esm/index.js"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","emitReserved","listeners","hasListeners","nextTick","isPromiseAvailable","Promise","resolve","setTimeoutFn","globalThisShim","self","window","Function","defaultBinaryType","createCookieJar","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","randomString","Date","now","random","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","Error","reason","description","context","super","writable","query","socket","forceBase64","readyState","doOpen","doClose","onClose","write","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","_polling","_poll","pause","total","doPoll","onOpen","close","doWrite","timestampRequests","timestampParam","sid","b64","createUri","value","XMLHttpRequest","err","hasCORS","empty","location","isSSL","xd","req","request","method","xhrStatus","onError","onData","pollXhr","createRequest","uri","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","send","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","hasXHR2","newRequest","responseType","XHR","assign","concat","isReactNative","navigator","product","toLowerCase","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","_transport","WebTransport","transportOptions","name","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","_open","EIO","id","priorWebsocketSuccess","createTransport","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","shouldCheckPayloadSize","payloadSize","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","o","map","filter","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","reviver","reconstructor","decodeString","isBinaryEvent","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","_hasPingExpired","discardPacket","notifyOutgoingListeners","ackTimeout","timer","withError","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","isBuffered","some","sameNamespace","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","Decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","active","_close","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","Manager","Socket"],"mappings":"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","file":"js/chunk-2d228e2a.ffceb4f9.js","sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n"],"sourceRoot":""}