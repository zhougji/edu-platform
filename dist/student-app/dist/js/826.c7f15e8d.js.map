{"version":3,"file":"js/826.c7f15e8d.js","mappings":"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","sources":["webpack://qimingyu-student-app/./node_modules/core-js/internals/get-iterator.js","webpack://qimingyu-student-app/./node_modules/core-js/modules/es.iterator.find.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/html.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/an-instance.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/iterator-map.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/get-iterator-method.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/object-keys.js","webpack://qimingyu-student-app/./node_modules/core-js/modules/es.iterator.map.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/get-iterator-direct.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/define-built-in-accessor.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/to-string-tag-support.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/correct-prototype-getter.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/object-create.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/create-iter-result-object.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/iterate.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/object-get-prototype-of.js","webpack://qimingyu-student-app/./src/views/AIAssistant.vue","webpack://qimingyu-student-app/./src/utils/apiService.js","webpack://qimingyu-student-app/./src/utils/aiService.js","webpack://qimingyu-student-app/./src/utils/debug.js","webpack://qimingyu-student-app/./node_modules/dompurify/dist/purify.es.mjs","webpack://qimingyu-student-app/./node_modules/marked/lib/marked.esm.js","webpack://qimingyu-student-app/src/views/AIAssistant.vue","webpack://qimingyu-student-app/./src/views/AIAssistant.vue?fe2c","webpack://qimingyu-student-app/./src/views/AIAssistant.vue?56d4","webpack://qimingyu-student-app/./node_modules/core-js/internals/is-array-iterator-method.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/create-property.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/function-bind-context.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/iterators.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/define-built-ins.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/object-define-properties.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/classof.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/function-uncurry-this-clause.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/iterators-core.js","webpack://qimingyu-student-app/./node_modules/core-js/modules/es.iterator.constructor.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/iterator-create-proxy.js","webpack://qimingyu-student-app/./node_modules/core-js/internals/iterator-close.js"],"sourcesContent":["'use strict';\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw new $TypeError(tryToString(argument) + ' is not iterable');\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true }, {\n  find: function find(predicate) {\n    anObject(this);\n    aCallable(predicate);\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (it, Prototype) {\n  if (isPrototypeOf(Prototype, it)) return it;\n  throw new $TypeError('Incorrect invocation');\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return callWithSafeIterationClosing(iterator, this.mapper, [result.value, this.counter++], true);\n});\n\n// `Iterator.prototype.map` method\n// https://github.com/tc39/proposal-iterator-helpers\nmodule.exports = function map(mapper) {\n  anObject(this);\n  aCallable(mapper);\n  return new IteratorProxy(getIteratorDirect(this), {\n    mapper: mapper\n  });\n};\n","'use strict';\nvar classof = require('../internals/classof');\nvar getMethod = require('../internals/get-method');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)\n    || getMethod(it, '@@iterator')\n    || Iterators[classof(it)];\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar map = require('../internals/iterator-map');\nvar IS_PURE = require('../internals/is-pure');\n\n// `Iterator.prototype.map` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.map\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE }, {\n  map: map\n});\n","'use strict';\n// `GetIteratorDirect(obj)` abstract operation\n// https://tc39.es/proposal-iterator-helpers/#sec-getiteratordirect\nmodule.exports = function (obj) {\n  return {\n    iterator: obj,\n    next: obj.next,\n    done: false\n  };\n};\n","'use strict';\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });\n  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  // eslint-disable-next-line no-useless-assignment -- avoid memory leak\n  activeXDocument = null;\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","'use strict';\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar $TypeError = TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nmodule.exports = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_RECORD = !!(options && options.IS_RECORD);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_RECORD) {\n    iterator = iterable.iterator;\n  } else if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw new $TypeError(tryToString(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator(iterable, iterFn);\n  }\n\n  next = IS_RECORD ? iterable.next : iterator.next;\n  while (!(step = call(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"ai-assistant-container\"},[_c('h1',[_vm._v(\"AI 学习助手\")]),_c('p',{staticClass:\"subtitle\"},[_vm._v(\"与 AI 互动，获取学习帮助和解答疑问。\")]),_c('el-card',{staticClass:\"chat-card\",attrs:{\"shadow\":\"never\"}},[_c('div',{ref:\"chatHistory\",staticClass:\"chat-history\"},[_vm._l((_vm.chatHistory),function(item,index){return _c('div',{key:index,class:['chat-message', item.role]},[_c('el-avatar',{staticClass:\"avatar\",attrs:{\"size\":30,\"icon\":item.role === 'user' ? 'el-icon-user-solid' : 'el-icon-cpu'}}),_c('div',{staticClass:\"message-content\"},[_c('div',{staticClass:\"message-bubble\"},[_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.formatMessage(item.content))}})])])],1)}),(_vm.isLoading)?_c('div',{staticClass:\"chat-message assistant loading-indicator\"},[_c('el-avatar',{staticClass:\"avatar\",attrs:{\"size\":30,\"icon\":\"el-icon-cpu\"}}),_c('div',{staticClass:\"message-content\"},[_c('div',{staticClass:\"message-bubble\"},[_c('i',{staticClass:\"el-icon-loading\"}),_vm._v(\" 正在思考... \")])])],1):_vm._e()],2),_c('div',{staticClass:\"chat-input-area\"},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"输入您的问题或想讨论的话题...\",\"rows\":2,\"resize\":\"none\"},nativeOn:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;$event.preventDefault();return _vm.handleEnterKey.apply(null, arguments)}},model:{value:(_vm.newMessage),callback:function ($$v) {_vm.newMessage=$$v},expression:\"newMessage\"}}),_c('el-button',{staticClass:\"send-button\",attrs:{\"type\":\"primary\",\"icon\":\"el-icon-s-promotion\",\"loading\":_vm.isLoading,\"disabled\":!_vm.newMessage.trim()},on:{\"click\":_vm.sendMessage}},[_vm._v(\" 发送 \")])],1)])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import axios from 'axios';\r\n\r\n// API基础URL配置\r\nexport const API_CONFIG = {\r\n    baseUrl: '',\r\n    timeout: 30000,\r\n    retries: 1\r\n};\r\n\r\n// 创建一个预配置的axios实例\r\nconst api = axios.create({\r\n    baseURL: API_CONFIG.baseUrl,\r\n    timeout: API_CONFIG.timeout,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    }\r\n});\r\n\r\n// 请求拦截器 - 添加日志和认证token\r\napi.interceptors.request.use(config => {\r\n    console.log(`API请求: ${config.method.toUpperCase()} ${config.url}`, config.data || {});\r\n\r\n    // 自动附加认证token（如果存在）\r\n    const token = localStorage.getItem('auth_token') || localStorage.getItem('token') || localStorage.getItem('studentToken');\r\n    if (token) {\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n}, error => {\r\n    console.error('API请求错误:', error);\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 响应拦截器 - 添加日志和错误处理\r\napi.interceptors.response.use(response => {\r\n    console.log(`API响应: ${response.status}`, response.data);\r\n    return response;\r\n}, error => {\r\n    if (error.response) {\r\n        console.error(`API错误: ${error.response.status}`, error.response.data);\r\n\r\n        // 如果是401错误且有token，可能是token过期，尝试清除\r\n        if (error.response.status === 401) {\r\n            const hasToken = localStorage.getItem('auth_token') || localStorage.getItem('token') || localStorage.getItem('studentToken');\r\n            if (hasToken) {\r\n                console.warn('收到401错误且存在token，可能是登录会话已过期');\r\n            }\r\n        }\r\n    } else if (error.request) {\r\n        console.error('没有收到响应', error.request);\r\n    } else {\r\n        console.error('请求配置错误', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\n// API方法\r\nexport default {\r\n    // AI相关\r\n    ai: {\r\n        // 测试AI服务连接\r\n        testConnection() {\r\n            return api.get('/api/ai/test');\r\n        },\r\n\r\n        // 未登录用户的AI查询\r\n        sendQuery(query, subject = 'General') {\r\n            return api.post('/api/ai/interactions', {\r\n                studentQuery: query,\r\n                subject: subject\r\n            });\r\n        },\r\n\r\n        // 已登录用户的AI查询 - 使用认证接口\r\n        sendAuthenticatedQuery(query, subject = 'General') {\r\n            return api.post('/api/ai-learning/quick-query', {\r\n                query: query,\r\n                subject: subject\r\n            });\r\n        }\r\n    },\r\n\r\n    // 用户相关\r\n    user: {\r\n        // 获取用户资料\r\n        getProfile() {\r\n            return api.get('/api/user/profile');\r\n        }\r\n    },\r\n\r\n    // 资源相关\r\n    resources: {\r\n        // 获取视频资源\r\n        getVideos() {\r\n            return api.get('/api/resources/videos');\r\n        }\r\n    }\r\n}; ","import api, { API_CONFIG } from './apiService';\n\n/**\n * Sends a message to the backend AI chat endpoint.\n *\n * @param {string} message The user's message.\n * @param {Array<object>} history The current chat history (optional). \n * @returns {Promise<string>} A promise that resolves with the AI's response text.\n */\nexport const sendMessageToAI = async (message, history = []) => {\n    try {\n        console.log('Sending AI message:', message);\n        let response;\n\n        // 检查用户是否已登录\n        const isLoggedIn = !!(localStorage.getItem('auth_token') || localStorage.getItem('token') || localStorage.getItem('studentToken'));\n\n        if (isLoggedIn) {\n            console.log('用户已登录，使用认证的AI接口');\n            // 使用需要认证的API接口\n            response = await api.ai.sendAuthenticatedQuery(message);\n\n            // 已认证接口的响应格式可能不同\n            if (response.data && response.data.response) {\n                return response.data.response;\n            }\n        } else {\n            console.log('用户未登录，使用匿名AI接口');\n            // 使用不需要认证的API接口\n            response = await api.ai.sendQuery(message);\n\n            // 检查响应结构\n            if (response.data && response.data.aiResponse) {\n                return response.data.aiResponse;\n            }\n        }\n\n        // 如果没有找到预期的响应格式\n        console.warn('Unexpected API response format:', response.data);\n        return '无法获取AI回复，响应格式不正确，请稍后再试';\n\n    } catch (error) {\n        console.error('AI服务错误详情:', error);\n\n        const errorMessage = error.response?.data?.message ||\n            error.message ||\n            '与AI助手通信失败，请检查网络连接和后端服务状态。';\n        throw new Error(errorMessage);\n    }\n};\n\n/**\n * 测试与后端AI服务的连接状态\n * @returns {Promise<boolean>} 如果连接成功返回true，否则返回false\n */\nexport const testAIServiceConnection = async () => {\n    try {\n        console.log('Testing backend connection...');\n\n        // 检查用户是否已登录\n        const isLoggedIn = !!(localStorage.getItem('auth_token') || localStorage.getItem('token') || localStorage.getItem('studentToken'));\n\n        if (isLoggedIn) {\n            // 对于已登录用户，可以用一个简单的查询来测试AI服务\n            try {\n                const response = await api.ai.sendAuthenticatedQuery('test', 'General');\n                console.log('Authenticated connection test result:', response.data);\n                return true;\n            } catch (authError) {\n                console.warn('Authenticated API test failed, falling back to public API test');\n                // 如果认证接口失败，回退到公共接口测试\n                const fallbackResponse = await api.ai.testConnection();\n                return !!fallbackResponse;\n            }\n        } else {\n            // 未登录用户使用公共测试端点\n            const response = await api.ai.testConnection();\n            console.log('Connection test result:', response.data);\n            return true;\n        }\n    } catch (error) {\n        console.error('Connection test failed:', error);\n        return false;\n    }\n};\n\n/**\n * 获取API配置\n * @returns {Object} API配置对象\n */\nexport const getApiConfig = () => {\n    return { ...API_CONFIG }; // 返回副本\n};\n\n// You can add other AI-related API calls here in the future ","/**\r\n * 调试工具 - 帮助识别和解决API连接问题\r\n */\r\n\r\nimport axios from 'axios';\r\n\r\n// 测试不同端口的连接性\r\nexport const testApiConnectivity = async (ports = [8085, 8086]) => {\r\n    console.log('🔍 开始API连接测试...');\r\n    const results = [];\r\n\r\n    for (const port of ports) {\r\n        try {\r\n            console.log(`测试端口 ${port}...`);\r\n            const testUrl = `http://localhost:${port}/api/ai/test`;\r\n\r\n            const response = await axios.get(testUrl, {\r\n                timeout: 3000\r\n            });\r\n\r\n            results.push({\r\n                port,\r\n                success: true,\r\n                status: response.status,\r\n                data: response.data\r\n            });\r\n\r\n            console.log(`✅ 端口 ${port} 测试成功`, response.data);\r\n        } catch (error) {\r\n            results.push({\r\n                port,\r\n                success: false,\r\n                error: error.message,\r\n                details: error.response ? {\r\n                    status: error.response.status,\r\n                    data: error.response.data\r\n                } : 'No response'\r\n            });\r\n\r\n            console.log(`❌ 端口 ${port} 测试失败:`, error.message);\r\n        }\r\n    }\r\n\r\n    console.log('📊 API测试结果摘要:', results);\r\n    return results;\r\n};\r\n\r\n// 显示连接调试信息\r\nexport const showDebugInfo = (apiConfig) => {\r\n    const debugInfo = {\r\n        version: '1.0.0',\r\n        timestamp: new Date().toISOString(),\r\n        api: apiConfig,\r\n        browser: {\r\n            userAgent: navigator.userAgent,\r\n            language: navigator.language,\r\n            platform: navigator.platform\r\n        }\r\n    };\r\n\r\n    console.log('🛠️ 调试信息:', debugInfo);\r\n    return debugInfo;\r\n};\r\n\r\n// 添加到Vue组件中使用的调试方法\r\nexport const setupDebugHelpers = (vueComponent) => {\r\n    // 添加到window对象以便在控制台访问\r\n    window.$debug = {\r\n        testApiConnectivity,\r\n        showDebugInfo,\r\n        api: vueComponent.$data.backend,\r\n        reload: () => {\r\n            vueComponent.testConnection();\r\n            return '正在重新测试连接...';\r\n        }\r\n    };\r\n\r\n    console.log('🔧 调试助手已启用，在控制台尝试 $debug 对象');\r\n}; ","/*! @license DOMPurify 3.2.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.5/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.5';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","/**\n * marked v15.0.8 - a markdown parser\n * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\nconst noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nconst other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/\\|table/g, '') // table not in commonmark\n    .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    lheading: lheadingGfm,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape$1 = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\nconst emStrongRDelimAstCore = '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n    .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape: escape$1,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    emStrongRDelimAst: emStrongRDelimAstGfm,\n    emStrongLDelim: emStrongLDelimGfm,\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && true) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text,\n    };\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            else {\n                // not a list since there were no items\n                return;\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","<template>\n  <div class=\"ai-assistant-container\">\n    <h1>AI 学习助手</h1>\n    <p class=\"subtitle\">与 AI 互动，获取学习帮助和解答疑问。</p>\n\n    <el-card class=\"chat-card\" shadow=\"never\">\n      <div class=\"chat-history\" ref=\"chatHistory\">\n        <div v-for=\"(item, index) in chatHistory\" :key=\"index\" :class=\"['chat-message', item.role]\">\n          <el-avatar :size=\"30\" :icon=\"item.role === 'user' ? 'el-icon-user-solid' : 'el-icon-cpu'\" class=\"avatar\"></el-avatar>\n          <div class=\"message-content\">\n            <div class=\"message-bubble\">\n              <p v-html=\"formatMessage(item.content)\"></p>\n            </div>\n          </div>\n        </div>\n        <div v-if=\"isLoading\" class=\"chat-message assistant loading-indicator\">\n           <el-avatar :size=\"30\" icon=\"el-icon-cpu\" class=\"avatar\"></el-avatar>\n           <div class=\"message-content\">\n             <div class=\"message-bubble\">\n                <i class=\"el-icon-loading\"></i> 正在思考...\n             </div>\n           </div>\n        </div>\n      </div>\n\n      <div class=\"chat-input-area\">\n        <el-input\n          type=\"textarea\"\n          v-model=\"newMessage\"\n          placeholder=\"输入您的问题或想讨论的话题...\"\n          :rows=\"2\"\n          resize=\"none\"\n          @keydown.enter.native.prevent=\"handleEnterKey\"\n        ></el-input>\n        <el-button \n          type=\"primary\" \n          icon=\"el-icon-s-promotion\" \n          @click=\"sendMessage\"\n          :loading=\"isLoading\"\n          :disabled=\"!newMessage.trim()\"\n          class=\"send-button\"\n        >\n          发送\n        </el-button>\n      </div>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nimport { sendMessageToAI, testAIServiceConnection } from '../utils/aiService'; // 导入 API 服务\nimport { setupDebugHelpers, testApiConnectivity } from '../utils/debug'; // 导入调试工具\nimport DOMPurify from 'dompurify'; // 用于清理HTML，防止XSS\nimport { marked } from 'marked'; // 用于将Markdown转换为HTML\n\nexport default {\n  name: 'AIAssistant',\n  data() {\n    return {\n      chatHistory: [ // 示例初始消息\n        { role: 'assistant', content: '你好！我是启明隅 AI 学习助手，有什么可以帮助你的吗？' }\n      ],\n      newMessage: '',\n      isLoading: false, // 控制加载状态\n      connectionStatus: 'unknown', // 连接状态：unknown, connected, error\n      backend: {\n        port: 8085,\n        url: ''\n      },\n      debugMode: true // 启用调试模式\n    };\n  },\n  created() {\n    // 组件创建时测试连接\n    this.testConnection();\n    \n    // 在调试模式下，设置调试助手\n    if (this.debugMode) {\n      setupDebugHelpers(this);\n    }\n  },\n  methods: {\n    async testConnection() {\n      try {\n        this.connectionStatus = 'unknown'; // 重置状态为检查中\n        \n        // 在调试模式下，测试多个端口\n        if (this.debugMode) {\n          const connectivityResults = await testApiConnectivity([8085, 8086]);\n          // 如果找到任何工作端口，更新配置\n          const workingPort = connectivityResults.find(r => r.success);\n          if (workingPort) {\n            this.backend.port = workingPort.port;\n            this.backend.url = `http://localhost:${workingPort.port}`;\n            console.log(`已自动切换到工作端口: ${workingPort.port}`);\n          }\n        }\n        \n        const isConnected = await testAIServiceConnection();\n        this.connectionStatus = isConnected ? 'connected' : 'error';\n        if (!isConnected) {\n          this.chatHistory.push({\n            role: 'assistant',\n            content: `⚠️ 警告：无法连接到AI服务。请检查后端服务是否正在运行，或联系管理员。\\n服务地址: ${this.backend.url}`\n          });\n        }\n      } catch (error) {\n        this.connectionStatus = 'error';\n        console.error('连接测试出错:', error);\n      }\n    },\n    async sendMessage() {\n      const messageText = this.newMessage.trim();\n      if (!messageText || this.isLoading) {\n        return;\n      }\n\n      // 如果是特殊命令\n      if (messageText === '/test') {\n        this.testConnection();\n        this.newMessage = '';\n        return;\n      }\n\n      // 1. Add user message to history\n      this.chatHistory.push({ role: 'user', content: messageText });\n      const currentMessage = messageText; // Store before clearing\n      this.newMessage = ''; // Clear input immediately\n      this.isLoading = true;\n      this.scrollToBottom();\n\n      try {\n        // Prepare history for the API call (optional, depends on backend needs)\n        // You might want to limit the history length sent to the backend\n        const historyToSend = this.chatHistory.slice(-10).map(item => ({\n          role: item.role,\n          content: item.content\n        }));\n\n        // 2. Call the AI service\n        const aiReply = await sendMessageToAI(currentMessage, historyToSend);\n\n        // 3. Add AI response to history\n        this.chatHistory.push({ role: 'assistant', content: aiReply });\n\n      } catch (error) {\n        console.error('Error communicating with AI assistant:', error);\n        // Add error message to chat history\n        this.chatHistory.push({ role: 'assistant', content: `抱歉，与 AI 助手连接时出错: ${error.message}` });\n        this.$message.error(`与 AI 助手连接时出错: ${error.message}`);\n      } finally {\n        this.isLoading = false;\n        this.scrollToBottom();\n      }\n    },\n\n    // Handle Enter key press in textarea\n    handleEnterKey(event) {\n      if (event.shiftKey) {\n        // Allow Shift+Enter for new lines\n        return;\n      }\n      this.sendMessage();\n    },\n\n    // Scroll chat history to the bottom\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatHistoryDiv = this.$refs.chatHistory;\n        if (chatHistoryDiv) {\n          chatHistoryDiv.scrollTop = chatHistoryDiv.scrollHeight;\n        }\n      });\n    },\n\n    // Format message content (e.g., render Markdown)\n    formatMessage(content) {\n       // Convert Markdown to HTML\n      const rawHtml = marked(content || '', { breaks: true, gfm: true }); \n       // Sanitize HTML to prevent XSS attacks\n      const cleanHtml = DOMPurify.sanitize(rawHtml);\n      return cleanHtml;\n    }\n  },\n  mounted() {\n    this.scrollToBottom(); // Scroll down on initial load\n  },\n  updated() {\n     this.scrollToBottom(); // Scroll down whenever the chat updates\n  }\n};\n</script>\n\n<style scoped>\n.ai-assistant-container {\n  padding: 25px;\n  max-width: 900px;\n  margin: 0 auto;\n}\n\nh1 {\n  text-align: center;\n  color: #303133;\n  margin-bottom: 10px;\n}\n\n.subtitle {\n  text-align: center;\n  color: #606266;\n  margin-bottom: 25px;\n}\n\n.chat-card {\n  border-radius: 8px;\n  overflow: hidden;\n  transition: all 0.3s;\n}\n\n.chat-history {\n  height: 400px;\n  overflow-y: auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n}\n\n.chat-message {\n  display: flex;\n  margin-bottom: 15px;\n}\n\n.chat-message.user {\n  flex-direction: row-reverse;\n}\n\n.avatar {\n  flex-shrink: 0;\n  margin: 0 12px;\n}\n\n.message-content {\n  flex: 1;\n  max-width: 80%;\n}\n\n.message-bubble {\n  padding: 12px 16px;\n  border-radius: 18px;\n  position: relative;\n  display: inline-block;\n  max-width: 100%;\n  word-wrap: break-word;\n}\n\n.user .message-bubble {\n  background-color: #ecf5ff;\n  color: #303133;\n  border-bottom-right-radius: 4px;\n  float: right;\n}\n\n.assistant .message-bubble {\n  background-color: white;\n  color: #303133;\n  border: 1px solid #ebeef5;\n  border-bottom-left-radius: 4px;\n}\n\n.message-bubble p {\n  margin: 0;\n  line-height: 1.5;\n}\n\n.message-bubble p + p {\n  margin-top: 10px;\n}\n\n.chat-input-area {\n  padding: 15px;\n  border-top: 1px solid #ebeef5;\n  display: flex;\n  align-items: flex-end;\n}\n\n.send-button {\n  margin-left: 10px;\n  height: 42px;\n  width: 80px;\n}\n\n.loading-indicator .message-bubble {\n  background-color: #f5f7fa;\n  color: #909399;\n}\n\n/* 代码块样式 */\n:deep(pre) {\n  background-color: #f8f8f8;\n  border-radius: 4px;\n  padding: 12px;\n  overflow-x: auto;\n  margin: 10px 0;\n}\n\n:deep(code) {\n  font-family: 'Courier New', Courier, monospace;\n  font-size: 14px;\n}\n\n:deep(p code) {\n  background-color: #f0f0f0;\n  padding: 2px 4px;\n  border-radius: 3px;\n}\n\n:deep(ul, ol) {\n  padding-left: 20px;\n}\n\n:deep(li) {\n  margin-bottom: 5px;\n}\n\n:deep(a) {\n  color: #409eff;\n  text-decoration: none;\n}\n\n:deep(a:hover) {\n  text-decoration: underline;\n}\n\n:deep(table) {\n  border-collapse: collapse;\n  width: 100%;\n  margin: 10px 0;\n}\n\n:deep(th, td) {\n  border: 1px solid #dcdfe6;\n  padding: 8px;\n  text-align: left;\n}\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AIAssistant.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AIAssistant.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AIAssistant.vue?vue&type=template&id=26cd3442&scoped=true\"\nimport script from \"./AIAssistant.vue?vue&type=script&lang=js\"\nexport * from \"./AIAssistant.vue?vue&type=script&lang=js\"\nimport style0 from \"./AIAssistant.vue?vue&type=style&index=0&id=26cd3442&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"26cd3442\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  if (DESCRIPTORS) definePropertyModule.f(object, key, createPropertyDescriptor(0, value));\n  else object[key] = value;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) defineBuiltIn(target, key, src[key], options);\n  return target;\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\nvar iteratorClose = require('../internals/iterator-close');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose(iterator, 'throw', error);\n  }\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar anInstance = require('../internals/an-instance');\nvar anObject = require('../internals/an-object');\nvar isCallable = require('../internals/is-callable');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar createProperty = require('../internals/create-property');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IS_PURE = require('../internals/is-pure');\n\nvar CONSTRUCTOR = 'constructor';\nvar ITERATOR = 'Iterator';\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nvar $TypeError = TypeError;\nvar NativeIterator = globalThis[ITERATOR];\n\n// FF56- have non-standard global helper `Iterator`\nvar FORCED = IS_PURE\n  || !isCallable(NativeIterator)\n  || NativeIterator.prototype !== IteratorPrototype\n  // FF44- non-standard `Iterator` passes previous tests\n  || !fails(function () { NativeIterator({}); });\n\nvar IteratorConstructor = function Iterator() {\n  anInstance(this, IteratorPrototype);\n  if (getPrototypeOf(this) === IteratorPrototype) throw new $TypeError('Abstract class Iterator not directly constructable');\n};\n\nvar defineIteratorPrototypeAccessor = function (key, value) {\n  if (DESCRIPTORS) {\n    defineBuiltInAccessor(IteratorPrototype, key, {\n      configurable: true,\n      get: function () {\n        return value;\n      },\n      set: function (replacement) {\n        anObject(this);\n        if (this === IteratorPrototype) throw new $TypeError(\"You can't redefine this property\");\n        if (hasOwn(this, key)) this[key] = replacement;\n        else createProperty(this, key, replacement);\n      }\n    });\n  } else IteratorPrototype[key] = value;\n};\n\nif (!hasOwn(IteratorPrototype, TO_STRING_TAG)) defineIteratorPrototypeAccessor(TO_STRING_TAG, ITERATOR);\n\nif (FORCED || !hasOwn(IteratorPrototype, CONSTRUCTOR) || IteratorPrototype[CONSTRUCTOR] === Object) {\n  defineIteratorPrototypeAccessor(CONSTRUCTOR, IteratorConstructor);\n}\n\nIteratorConstructor.prototype = IteratorPrototype;\n\n// `Iterator` constructor\n// https://tc39.es/ecma262/#sec-iterator\n$({ global: true, constructor: true, forced: FORCED }, {\n  Iterator: IteratorConstructor\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIns = require('../internals/define-built-ins');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar InternalStateModule = require('../internals/internal-state');\nvar getMethod = require('../internals/get-method');\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar iteratorClose = require('../internals/iterator-close');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ITERATOR_HELPER = 'IteratorHelper';\nvar WRAP_FOR_VALID_ITERATOR = 'WrapForValidIterator';\nvar setInternalState = InternalStateModule.set;\n\nvar createIteratorProxyPrototype = function (IS_ITERATOR) {\n  var getInternalState = InternalStateModule.getterFor(IS_ITERATOR ? WRAP_FOR_VALID_ITERATOR : ITERATOR_HELPER);\n\n  return defineBuiltIns(create(IteratorPrototype), {\n    next: function next() {\n      var state = getInternalState(this);\n      // for simplification:\n      //   for `%WrapForValidIteratorPrototype%.next` or with `state.returnHandlerResult` our `nextHandler` returns `IterResultObject`\n      //   for `%IteratorHelperPrototype%.next` - just a value\n      if (IS_ITERATOR) return state.nextHandler();\n      if (state.done) return createIterResultObject(undefined, true);\n      try {\n        var result = state.nextHandler();\n        return state.returnHandlerResult ? result : createIterResultObject(result, state.done);\n      } catch (error) {\n        state.done = true;\n        throw error;\n      }\n    },\n    'return': function () {\n      var state = getInternalState(this);\n      var iterator = state.iterator;\n      state.done = true;\n      if (IS_ITERATOR) {\n        var returnMethod = getMethod(iterator, 'return');\n        return returnMethod ? call(returnMethod, iterator) : createIterResultObject(undefined, true);\n      }\n      if (state.inner) try {\n        iteratorClose(state.inner.iterator, 'normal');\n      } catch (error) {\n        return iteratorClose(iterator, 'throw', error);\n      }\n      if (iterator) iteratorClose(iterator, 'normal');\n      return createIterResultObject(undefined, true);\n    }\n  });\n};\n\nvar WrapForValidIteratorPrototype = createIteratorProxyPrototype(true);\nvar IteratorHelperPrototype = createIteratorProxyPrototype(false);\n\ncreateNonEnumerableProperty(IteratorHelperPrototype, TO_STRING_TAG, 'Iterator Helper');\n\nmodule.exports = function (nextHandler, IS_ITERATOR, RETURN_HANDLER_RESULT) {\n  var IteratorProxy = function Iterator(record, state) {\n    if (state) {\n      state.iterator = record.iterator;\n      state.next = record.next;\n    } else state = record;\n    state.type = IS_ITERATOR ? WRAP_FOR_VALID_ITERATOR : ITERATOR_HELPER;\n    state.returnHandlerResult = !!RETURN_HANDLER_RESULT;\n    state.nextHandler = nextHandler;\n    state.counter = 0;\n    state.done = false;\n    setInternalState(this, state);\n  };\n\n  IteratorProxy.prototype = IS_ITERATOR ? WrapForValidIteratorPrototype : IteratorHelperPrototype;\n\n  return IteratorProxy;\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getMethod = require('../internals/get-method');\n\nmodule.exports = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject(iterator);\n  try {\n    innerResult = getMethod(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject(innerResult);\n  return value;\n};\n"],"names":["call","aCallable","anObject","tryToString","getIteratorMethod","$TypeError","TypeError","module","exports","argument","usingIterator","iteratorMethod","arguments","length","$","iterate","getIteratorDirect","target","proto","real","find","predicate","this","record","counter","value","stop","IS_RECORD","INTERRUPTED","result","getBuiltIn","isPrototypeOf","it","Prototype","createIteratorProxy","callWithSafeIterationClosing","IteratorProxy","iterator","next","done","mapper","classof","getMethod","isNullOrUndefined","Iterators","wellKnownSymbol","ITERATOR","internalObjectKeys","enumBugKeys","Object","keys","O","map","IS_PURE","forced","obj","makeBuiltIn","defineProperty","name","descriptor","get","getter","set","setter","f","TO_STRING_TAG","test","String","fails","F","prototype","constructor","getPrototypeOf","activeXDocument","definePropertiesModule","hiddenKeys","html","documentCreateElement","sharedKey","GT","LT","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObjectViaIFrame","iframeDocument","iframe","JS","style","display","appendChild","src","contentWindow","document","open","NullProtoObject","ActiveXObject","error","domain","create","Properties","undefined","bind","isArrayIteratorMethod","lengthOfArrayLike","getIterator","iteratorClose","Result","stopped","ResultPrototype","iterable","unboundFunction","options","iterFn","index","step","that","AS_ENTRIES","IS_ITERATOR","fn","condition","callFn","hasOwn","isCallable","toObject","CORRECT_PROTOTYPE_GETTER","$Object","ObjectPrototype","object","render","_vm","_c","_self","staticClass","_v","attrs","ref","_l","chatHistory","item","key","class","role","domProps","_s","formatMessage","isLoading","_e","nativeOn","$event","type","indexOf","_k","keyCode","preventDefault","handleEnterKey","apply","model","newMessage","callback","$$v","expression","trim","on","sendMessage","staticRenderFns","API_CONFIG","baseUrl","timeout","retries","api","axios","baseURL","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","data","token","localStorage","getItem","Promise","reject","response","status","hasToken","warn","message","ai","testConnection","sendQuery","query","subject","post","studentQuery","sendAuthenticatedQuery","user","getProfile","resources","getVideos","sendMessageToAI","async","history","isLoggedIn","aiResponse","errorMessage","Error","testAIServiceConnection","authError","fallbackResponse","testApiConnectivity","ports","results","port","testUrl","push","success","details","showDebugInfo","apiConfig","debugInfo","version","timestamp","Date","toISOString","browser","userAgent","navigator","language","platform","setupDebugHelpers","vueComponent","window","$debug","$data","backend","reload","entries","setPrototypeOf","isFrozen","getOwnPropertyDescriptor","freeze","seal","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","forEach","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","arraySplice","splice","stringToLowerCase","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","stringTrim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","typeErrorCreate","unconstruct","func","thisArg","lastIndex","_len","_key","_len2","_key2","addToSet","array","transformCaseFunc","l","element","lcElement","cleanArray","isPropertyExist","clone","newObject","property","isArray","lookupGetter","prop","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","attribute","text","cdataSection","entityReference","entityNode","progressingInstruction","comment","documentType","documentFragment","notation","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","_createHooksMap","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createDOMPurify","DOMPurify","root","removed","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","removeChild","_removeAttribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHooks","currentNode","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childCount","i","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","purify","_getDefaults","breaks","extensions","gfm","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","noopTest","exec","edit","regex","opt","source","val","valSource","other","caret","getRegex","codeRemoveIndent","outputLinkReplace","indentCodeCompensation","beginningSpace","endingHash","startingSpaceChar","endingSpaceChar","nonSpaceChar","newLineCharGlobal","tabCharGlobal","multipleSpaceGlobal","blankLine","doubleBlankLine","blockquoteStart","blockquoteSetextReplace","blockquoteSetextReplace2","listReplaceTabs","listReplaceNesting","listIsTask","listReplaceTask","anyLine","hrefBrackets","tableDelimiter","tableAlignChars","tableRowBlankLine","tableAlignRight","tableAlignCenter","tableAlignLeft","startATag","endATag","startPreScriptTag","endPreScriptTag","startAngleBracket","endAngleBracket","pedanticHrefTitle","unicodeAlphaNumeric","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescapeTest","percentDecode","findPipe","splitPipe","slashPipe","carriageReturn","spaceLine","notSpaceStart","endingNewline","listItemRegex","bull","nextBulletRegex","indent","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","newline","blockCode","fences","hr","heading","bullet","lheadingCore","lheading","lheadingGfm","_paragraph","blockText","_blockLabel","def","list","_tag","_comment","paragraph","blockquote","blockNormal","code","gfmTable","blockGfm","blockPedantic","escape$1","inlineCode","br","inlineText","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","_punctuationGfmStrongEm","_punctuationOrSpaceGfmStrongEm","_notPunctuationOrSpaceGfmStrongEm","blockSkip","emStrongLDelimCore","emStrongLDelim","emStrongLDelimGfm","emStrongRDelimAstCore","emStrongRDelimAst","emStrongRDelimAstGfm","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","_inlineLabel","reflink","nolink","reflinkSearch","inlineNormal","_backpedal","del","escape","link","inlinePedantic","inlineGfm","inlineBreaks","block","normal","inline","escapeReplacements","getEscapeReplacement","ch","encode","cleanUrl","href","encodeURI","splitCells","tableRow","count","row","offset","str","escaped","curr","cells","split","shift","at","rtrim","c","invert","suffLen","currChar","charAt","slice","findClosingBracket","b","level","outputLink","cap","raw","lexer","rules","title","state","inLink","tokens","inlineTokens","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","join","_Tokenizer","space","codeBlockStyle","lang","trimmed","depth","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","substring","isordered","ordered","start","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","t","repeat","nextLine","trimStart","search","rawLine","nextLineWithoutTabs","ischecked","istask","task","checked","lastItem","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","aligns","rows","header","align","cell","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","emStrong","maskedSrc","prevChar","nextChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","_Lexer","inlineQueue","lex","lexInline","lastParagraphClipped","extTokenizer","cutSrc","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","charCodeAt","includes","keepPrevChar","startInline","_Renderer","parser","langString","parse","parseInline","j","listitem","startAttr","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","anyToken","renderers","genericToken","ret","textToken","_Hooks","static","Set","preprocess","markdown","postprocess","processAllTokens","provideLexer","provideParser","Marked","defaults","setOptions","parseMarkdown","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","values","concat","tableToken","listToken","childTokens","flat","pack","opts","ext","prevRenderer","extLevel","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","has","arg","resolve","then","packWalktokens","blockType","origOpt","throwError","onError","all","catch","e","msg","markedInstance","marked","getDefaults","connectionStatus","debugMode","created","methods","connectivityResults","workingPort","r","isConnected","messageText","currentMessage","scrollToBottom","historyToSend","aiReply","$message","event","shiftKey","$nextTick","chatHistoryDiv","$refs","scrollTop","scrollHeight","rawHtml","cleanHtml","mounted","updated","component","ArrayPrototype","DESCRIPTORS","definePropertyModule","createPropertyDescriptor","uncurryThis","NATIVE_BIND","defineBuiltIn","ENTRIES","V8_PROTOTYPE_DEFINE_BUG","toIndexedObject","objectKeys","defineProperties","props","TO_STRING_TAG_SUPPORT","classofRaw","CORRECT_ARGUMENTS","tryGet","callee","IteratorPrototype","PrototypeOfArrayIteratorPrototype","arrayIterator","isObject","BUGGY_SAFARI_ITERATORS","NEW_ITERATOR_PROTOTYPE","globalThis","anInstance","defineBuiltInAccessor","createProperty","CONSTRUCTOR","NativeIterator","FORCED","IteratorConstructor","defineIteratorPrototypeAccessor","replacement","global","Iterator","createNonEnumerableProperty","defineBuiltIns","InternalStateModule","createIterResultObject","ITERATOR_HELPER","WRAP_FOR_VALID_ITERATOR","setInternalState","createIteratorProxyPrototype","getInternalState","getterFor","nextHandler","returnHandlerResult","returnMethod","inner","WrapForValidIteratorPrototype","IteratorHelperPrototype","RETURN_HANDLER_RESULT","kind","innerResult","innerError"],"sourceRoot":""}