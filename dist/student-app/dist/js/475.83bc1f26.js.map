{"version":3,"file":"js/475.83bc1f26.js","mappings":"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","sources":["webpack://qimingyu-student-app/./src/views/Profile.vue","webpack://qimingyu-student-app/src/views/Profile.vue","webpack://qimingyu-student-app/./src/views/Profile.vue?3bbc","webpack://qimingyu-student-app/./src/views/Profile.vue?af93"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"profile-page\"},[_c('el-card',[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('span',[_vm._v(\"个人资料\")])]),_c('el-tabs',{model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('el-tab-pane',{attrs:{\"label\":\"基本信息\",\"name\":\"basic\"}},[_c('el-row',{staticStyle:{\"margin-top\":\"20px\"},attrs:{\"gutter\":40}},[_c('el-col',{staticStyle:{\"text-align\":\"center\"},attrs:{\"span\":6}},[_c('el-upload',{staticClass:\"avatar-uploader\",attrs:{\"action\":\"/api/students/upload-avatar\",\"headers\":_vm.uploadHeaders,\"show-file-list\":false,\"on-success\":_vm.handleAvatarSuccess,\"before-upload\":_vm.beforeAvatarUpload,\"on-error\":_vm.handleAvatarError}},[_c('el-avatar',{staticClass:\"profile-avatar\",attrs:{\"size\":120,\"src\":_vm.profileForm.avatar || _vm.defaultAvatar}}),_c('div',{staticClass:\"upload-overlay\"},[_vm._v(\"点击上传头像\")])],1),_c('p',{staticStyle:{\"color\":\"#909399\",\"font-size\":\"0.85em\",\"margin-top\":\"10px\"}},[_vm._v(\"支持 JPG/PNG 格式, 小于 2MB\")])],1),_c('el-col',{attrs:{\"span\":18}},[_c('el-form',{ref:\"profileForm\",attrs:{\"model\":_vm.profileForm,\"rules\":_vm.profileRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"姓名\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入姓名\"},model:{value:(_vm.profileForm.name),callback:function ($$v) {_vm.$set(_vm.profileForm, \"name\", $$v)},expression:\"profileForm.name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"邮箱\"}},[_c('el-input',{attrs:{\"value\":_vm.profileForm.email,\"disabled\":\"\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.isSavingProfile},on:{\"click\":_vm.updateProfile}},[_vm._v(\"保存基本信息\")])],1)],1)],1)],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"修改密码\",\"name\":\"password\"}},[_c('el-form',{ref:\"passwordForm\",staticStyle:{\"margin-top\":\"20px\",\"max-width\":\"500px\"},attrs:{\"model\":_vm.passwordForm,\"rules\":_vm.passwordRules,\"label-width\":\"120px\"}},[_c('el-form-item',{attrs:{\"label\":\"当前密码\",\"prop\":\"currentPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入当前密码\",\"show-password\":\"\"},model:{value:(_vm.passwordForm.currentPassword),callback:function ($$v) {_vm.$set(_vm.passwordForm, \"currentPassword\", $$v)},expression:\"passwordForm.currentPassword\"}})],1),_c('el-form-item',{attrs:{\"label\":\"新密码\",\"prop\":\"newPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入新密码 (至少6位)\",\"show-password\":\"\"},model:{value:(_vm.passwordForm.newPassword),callback:function ($$v) {_vm.$set(_vm.passwordForm, \"newPassword\", $$v)},expression:\"passwordForm.newPassword\"}})],1),_c('el-form-item',{attrs:{\"label\":\"确认新密码\",\"prop\":\"confirmPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"placeholder\":\"请再次输入新密码\",\"show-password\":\"\"},model:{value:(_vm.passwordForm.confirmPassword),callback:function ($$v) {_vm.$set(_vm.passwordForm, \"confirmPassword\", $$v)},expression:\"passwordForm.confirmPassword\"}})],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.isSavingPassword},on:{\"click\":_vm.changePassword}},[_vm._v(\"确认修改密码\")])],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"profile-page\">\r\n    <el-card>\r\n      <div slot=\"header\">\r\n        <span>个人资料</span>\r\n      </div>\r\n\r\n      <el-tabs v-model=\"activeTab\">\r\n        <!-- Basic Info Tab -->\r\n        <el-tab-pane label=\"基本信息\" name=\"basic\">\r\n          <el-row :gutter=\"40\" style=\"margin-top: 20px;\">\r\n            <el-col :span=\"6\" style=\"text-align: center;\">\r\n              <el-upload\r\n                class=\"avatar-uploader\"\r\n                action=\"/api/students/upload-avatar\" \r\n                :headers=\"uploadHeaders\"\r\n                :show-file-list=\"false\"\r\n                :on-success=\"handleAvatarSuccess\"\r\n                :before-upload=\"beforeAvatarUpload\"\r\n                :on-error=\"handleAvatarError\"\r\n              >\r\n                <el-avatar :size=\"120\" :src=\"profileForm.avatar || defaultAvatar\" class=\"profile-avatar\"></el-avatar>\r\n                <div class=\"upload-overlay\">点击上传头像</div>\r\n              </el-upload>\r\n               <p style=\"color: #909399; font-size: 0.85em; margin-top: 10px;\">支持 JPG/PNG 格式, 小于 2MB</p>\r\n            </el-col>\r\n            <el-col :span=\"18\">\r\n              <el-form :model=\"profileForm\" :rules=\"profileRules\" ref=\"profileForm\" label-width=\"100px\">\r\n                <el-form-item label=\"姓名\" prop=\"name\">\r\n                  <el-input v-model=\"profileForm.name\" placeholder=\"请输入姓名\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"邮箱\">\r\n                  <el-input :value=\"profileForm.email\" disabled></el-input> \r\n                </el-form-item>\r\n                <!-- Add other non-editable or editable fields like school, grade etc. -->\r\n                <el-form-item>\r\n                  <el-button type=\"primary\" @click=\"updateProfile\" :loading=\"isSavingProfile\">保存基本信息</el-button>\r\n                </el-form-item>\r\n              </el-form>\r\n            </el-col>\r\n          </el-row>\r\n        </el-tab-pane>\r\n\r\n        <!-- Change Password Tab -->\r\n        <el-tab-pane label=\"修改密码\" name=\"password\">\r\n          <el-form :model=\"passwordForm\" :rules=\"passwordRules\" ref=\"passwordForm\" label-width=\"120px\" style=\"margin-top: 20px; max-width: 500px;\">\r\n             <el-form-item label=\"当前密码\" prop=\"currentPassword\">\r\n              <el-input type=\"password\" v-model=\"passwordForm.currentPassword\" placeholder=\"请输入当前密码\" show-password></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n              <el-input type=\"password\" v-model=\"passwordForm.newPassword\" placeholder=\"请输入新密码 (至少6位)\" show-password></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"确认新密码\" prop=\"confirmPassword\">\r\n              <el-input type=\"password\" v-model=\"passwordForm.confirmPassword\" placeholder=\"请再次输入新密码\" show-password></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"changePassword\" :loading=\"isSavingPassword\">确认修改密码</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  data() {\r\n     // Validator for confirm new password\r\n    const validatePassConfirm = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入新密码'));\r\n      } else if (value !== this.passwordForm.newPassword) {\r\n        callback(new Error('两次输入的新密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    \r\n    return {\r\n      activeTab: 'basic',\r\n      isSavingProfile: false,\r\n      isSavingPassword: false,\r\n      profileForm: { // Initialize with current student info\r\n        name: '',\r\n        email: '',\r\n        avatar: ''\r\n      },\r\n      passwordForm: {\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      },\r\n      profileRules: {\r\n        name: [\r\n          { required: true, message: '请输入姓名', trigger: 'blur' }\r\n        ]\r\n        // Add rules for other editable fields if any\r\n      },\r\n      passwordRules: {\r\n         currentPassword: [\r\n          { required: true, message: '请输入当前密码', trigger: 'blur' }\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度至少为6位', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请再次输入新密码', trigger: 'blur' },\r\n          { validator: validatePassConfirm, trigger: 'blur' }\r\n        ]\r\n      },\r\n      defaultAvatar: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png', // Default user avatar\r\n      uploadHeaders: { // Set auth token for upload requests\r\n         Authorization: `Bearer ${localStorage.getItem('studentToken')}`\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['studentInfo'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['updateStudentInfo', 'showSnackbar', 'logout']),\r\n\r\n    // --- Profile Update --- \r\n    updateProfile() {\r\n      this.$refs.profileForm.validate((valid) => {\r\n        if (valid) {\r\n          this.isSavingProfile = true;\r\n          const updatedData = { name: this.profileForm.name }; // Only send editable fields\r\n          \r\n          // Placeholder API call\r\n          this.$axios.put('/students/profile', updatedData)\r\n            .then(response => {\r\n               // Update Vuex store with potentially updated info from backend\r\n              this.updateStudentInfo(response.data || updatedData); \r\n              this.showSnackbar({ text: '基本信息更新成功!', color: 'success' });\r\n            })\r\n            .catch(error => {\r\n              console.error(\"Profile update failed:\", error.response?.data || error.message);\r\n              const errorMsg = error.response?.data?.message || '信息更新失败';\r\n              this.showSnackbar({ text: errorMsg, color: 'error' });\r\n            })\r\n            .finally(() => {\r\n              this.isSavingProfile = false;\r\n            });\r\n        }\r\n      });\r\n    },\r\n\r\n    // --- Avatar Upload --- \r\n    handleAvatarSuccess(res, file) {\r\n      // Assuming backend returns the new avatar URL in res.url or similar\r\n      const newAvatarUrl = res.url || URL.createObjectURL(file.raw);\r\n      this.profileForm.avatar = newAvatarUrl;\r\n      // Update avatar in Vuex store as well\r\n      this.updateStudentInfo({ avatar: newAvatarUrl });\r\n      this.showSnackbar({ text: '头像上传成功!', color: 'success' });\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type === 'image/jpeg';\r\n      const isPNG = file.type === 'image/png';\r\n      const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n      if (!isJPG && !isPNG) {\r\n        this.$message.error('上传头像图片只能是 JPG 或 PNG 格式!');\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error('上传头像图片大小不能超过 2MB!');\r\n      }\r\n      return (isJPG || isPNG) && isLt2M;\r\n    },\r\n     handleAvatarError(err) {\r\n       console.error(\"Avatar upload failed:\", err);\r\n       this.showSnackbar({ text: '头像上传失败，请重试', color: 'error' });\r\n    },\r\n\r\n    // --- Password Change ---\r\n    changePassword() {\r\n      this.$refs.passwordForm.validate((valid) => {\r\n        if (valid) {\r\n          this.isSavingPassword = true;\r\n          const passwordData = {\r\n             currentPassword: this.passwordForm.currentPassword,\r\n             newPassword: this.passwordForm.newPassword\r\n          };\r\n          // Placeholder API call\r\n          this.$axios.put('/students/password', passwordData)\r\n            .then(() => {\r\n              this.showSnackbar({ text: '密码修改成功！请重新登录。', color: 'success' });\r\n              this.$refs.passwordForm.resetFields(); // Clear form\r\n              // Force logout after password change for security\r\n              setTimeout(() => {\r\n                  this.logout(); // Call Vuex logout action\r\n                  this.$router.push('/login').catch(()=>{});\r\n              }, 1500);\r\n            })\r\n            .catch(error => {\r\n              console.error(\"Password change failed:\", error.response?.data || error.message);\r\n              const errorMsg = error.response?.data?.message || '密码修改失败，请检查当前密码是否正确';\r\n              this.showSnackbar({ text: errorMsg, color: 'error' });\r\n            })\r\n            .finally(() => {\r\n              this.isSavingPassword = false;\r\n            });\r\n        }\r\n      });\r\n    },\r\n\r\n    // --- Initialization ---\r\n    setInitialData() {\r\n        if (this.studentInfo) {\r\n            this.profileForm.name = this.studentInfo.name || '';\r\n            this.profileForm.email = this.studentInfo.email || '';\r\n            this.profileForm.avatar = this.studentInfo.avatar || '';\r\n        }\r\n    }\r\n  },\r\n  created() {\r\n    this.setInitialData();\r\n  },\r\n  watch: {\r\n      // Update form if studentInfo changes (e.g., after initial load)\r\n      studentInfo(newInfo) {\r\n          if (newInfo) {\r\n            this.setInitialData();\r\n          }\r\n      }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-page {\r\n  padding: 20px;\r\n}\r\n\r\n.avatar-uploader {\r\n  position: relative;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  overflow: hidden; /* Ensures overlay stays within bounds */\r\n  cursor: pointer;\r\n}\r\n\r\n.avatar-uploader:hover .upload-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n.profile-avatar {\r\n  display: block; /* Prevent extra space below avatar */\r\n}\r\n\r\n.upload-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n  font-size: 0.9em;\r\n  text-align: center;\r\n  padding: 5px;\r\n}\r\n\r\n/* Remove default upload styles */\r\n.avatar-uploader .el-upload {\r\n  border: none;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 120px; /* Match avatar size */\r\n  height: 120px; /* Match avatar size */\r\n}\r\n\r\n/* Style form for password change */\r\n.el-tab-pane[name=\"password\"] .el-form {\r\n    padding: 20px;\r\n    border: 1px solid #eee;\r\n    border-radius: 4px;\r\n    background-color: #fdfdfd;\r\n}\r\n\r\n</style> ","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Profile.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Profile.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Profile.vue?vue&type=template&id=51ba623e&scoped=true\"\nimport script from \"./Profile.vue?vue&type=script&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&lang=js\"\nimport style0 from \"./Profile.vue?vue&type=style&index=0&id=51ba623e&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"51ba623e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","slot","_v","model","value","activeTab","callback","$$v","expression","staticStyle","uploadHeaders","handleAvatarSuccess","beforeAvatarUpload","handleAvatarError","profileForm","avatar","defaultAvatar","ref","profileRules","name","$set","email","isSavingProfile","on","updateProfile","passwordForm","passwordRules","currentPassword","newPassword","confirmPassword","isSavingPassword","changePassword","staticRenderFns","data","validatePassConfirm","rule","Error","required","message","trigger","min","validator","Authorization","localStorage","getItem","computed","mapGetters","methods","mapActions","$refs","validate","valid","updatedData","$axios","put","then","response","updateStudentInfo","showSnackbar","text","color","catch","error","console","errorMsg","finally","res","file","newAvatarUrl","url","URL","createObjectURL","raw","isJPG","type","isPNG","isLt2M","size","$message","err","passwordData","resetFields","setTimeout","logout","$router","push","setInitialData","studentInfo","created","watch","newInfo","component"],"sourceRoot":""}