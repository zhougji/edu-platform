{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sensor-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"sensor-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"硬件传感器数据\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.connectSensor\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"i\", {\n      class: \"fas fa-bluetooth\",\n      style: {\n        \"margin-right\": \"5px\"\n      }\n    }, null, -1 /* HOISTED */), _createTextVNode(\" 连接传感器 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), $data.sensorData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"传感器数据：\" + _toDisplayString($data.sensorData), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_el_button","type","onClick","$options","connectSensor","default","_withCtx","_cache","style","_createTextVNode","_","$data","sensorData","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["D:\\Code\\coding\\edu-platform\\student-app\\src\\components\\HardwareSensor.vue"],"sourcesContent":["<template>\r\n  <div class=\"sensor-container\">\r\n    <h2>硬件传感器数据</h2>\r\n    <el-button type=\"primary\" @click=\"connectSensor\">\r\n      <i class=\"fas fa-bluetooth\" style=\"margin-right:5px;\"></i>\r\n      连接传感器\r\n    </el-button>\r\n    <div v-if=\"sensorData\" class=\"sensor-data\">\r\n      <p>传感器数据：{{ sensorData }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"HardwareSensor\",\r\n  data() {\r\n    return {\r\n      sensorData: null\r\n    }\r\n  },\r\n  methods: {\r\n    async connectSensor() {\r\n      try {\r\n        const device = await navigator.bluetooth.requestDevice({\r\n          filters: [{ services: ['battery_service'] }]\r\n        });\r\n        const server = await device.gatt.connect();\r\n        this.sensorData = '示例数据：电池电量 85%';\r\n        this.$message.success('传感器连接成功');\r\n      } catch (err) {\r\n        this.$message.error('传感器连接失败');\r\n        console.error(err);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.sensor-container {\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n.sensor-data {\r\n  margin-top: 20px;\r\n  font-size: 16px;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EAD/BC,GAAA;EAO2BD,KAAK,EAAC;;;;uBAN/BE,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAAgB,YAAZ,SAAO,sBACXC,YAAA,CAGYC,oBAAA;IAHDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAHtCC,OAAA,EAAAC,QAAA,CAIM,MAA0DC,MAAA,QAAAA,MAAA,OAA1DT,mBAAA,CAA0D;MAAvDJ,KAAK,EAAC,kBAAkB;MAACc,KAAyB,EAAzB;QAAA;MAAA;gCAJlCC,gBAAA,CAIgE,SAE5D,E;IANJC,CAAA;kCAOeC,KAAA,CAAAC,UAAU,I,cAArBhB,mBAAA,CAEM,OAFNiB,UAEM,GADJf,mBAAA,CAA6B,WAA1B,QAAM,GAAAgB,gBAAA,CAAGH,KAAA,CAAAC,UAAU,iB,KAR5BG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}