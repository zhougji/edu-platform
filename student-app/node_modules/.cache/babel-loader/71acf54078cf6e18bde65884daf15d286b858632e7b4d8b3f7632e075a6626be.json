{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, {\n    class: \"box-card\",\n    style: {\n      \"max-width\": \"400px\",\n      \"margin\": \"40px auto\"\n    }\n  }, {\n    default: _withCtx(() => [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n      style: {\n        \"text-align\": \"center\"\n      }\n    }, \"学生登录\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n      model: $data.form,\n      \"label-width\": \"0\",\n      style: {\n        \"margin-top\": \"20px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.email = $event),\n          placeholder: \"邮箱\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.form.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event),\n          placeholder: \"密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          style: {\n            \"width\": \"100%\"\n          },\n          onClick: $options.onSubmit\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"登录\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_card","class","style","default","_withCtx","_createElementVNode","_createVNode","_component_el_form","model","$data","form","_component_el_form_item","_component_el_input","modelValue","email","_cache","$event","placeholder","_","type","password","_component_el_button","onClick","$options","onSubmit","_createTextVNode"],"sources":["D:\\Code\\coding\\edu-platform\\student-app\\src\\components\\Login.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\" style=\"max-width: 400px; margin: 40px auto;\">\r\n    <h2 style=\"text-align:center;\">学生登录</h2>\r\n    <el-form :model=\"form\" label-width=\"0\" style=\"margin-top: 20px;\">\r\n      <el-form-item>\r\n        <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-input type=\"password\" v-model=\"form.password\" placeholder=\"密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" style=\"width: 100%;\" @click=\"onSubmit\">登录</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        email: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async onSubmit() {\r\n      try {\r\n        const res = await axios.post('http://localhost:5000/api/auth/login', this.form)\r\n        localStorage.setItem('token', res.data.token)\r\n        this.$message.success('登录成功')\r\n        this.$router.push('/profile')\r\n      } catch (err) {\r\n        this.$message.error('登录失败: ' + err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;;;;;;uBACEA,YAAA,CAaUC,kBAAA;IAbDC,KAAK,EAAC,UAAU;IAACC,KAA4C,EAA5C;MAAA;MAAA;IAAA;;IAD5BC,OAAA,EAAAC,QAAA,CAEI,MAAwC,C,0BAAxCC,mBAAA,CAAwC;MAApCH,KAA0B,EAA1B;QAAA;MAAA;IAA0B,GAAC,MAAI,sBACnCI,YAAA,CAUUC,kBAAA;MAVAC,KAAK,EAAEC,KAAA,CAAAC,IAAI;MAAE,aAAW,EAAC,GAAG;MAACR,KAAyB,EAAzB;QAAA;MAAA;;MAH3CC,OAAA,EAAAC,QAAA,CAIM,MAEe,CAFfE,YAAA,CAEeK,uBAAA;QANrBR,OAAA,EAAAC,QAAA,CAKQ,MAA2D,CAA3DE,YAAA,CAA2DM,mBAAA;UALnEC,UAAA,EAK2BJ,KAAA,CAAAC,IAAI,CAACI,KAAK;UALrC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK2BP,KAAA,CAAAC,IAAI,CAACI,KAAK,GAAAE,MAAA;UAAEC,WAAW,EAAC;;QALnDC,CAAA;UAOMZ,YAAA,CAEeK,uBAAA;QATrBR,OAAA,EAAAC,QAAA,CAQQ,MAA8E,CAA9EE,YAAA,CAA8EM,mBAAA;UAApEO,IAAI,EAAC,UAAU;UARjCN,UAAA,EAQ2CJ,KAAA,CAAAC,IAAI,CAACU,QAAQ;UARxD,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQ2CP,KAAA,CAAAC,IAAI,CAACU,QAAQ,GAAAJ,MAAA;UAAEC,WAAW,EAAC;;QARtEC,CAAA;UAUMZ,YAAA,CAEeK,uBAAA;QAZrBR,OAAA,EAAAC,QAAA,CAWQ,MAA+E,CAA/EE,YAAA,CAA+Ee,oBAAA;UAApEF,IAAI,EAAC,SAAS;UAACjB,KAAoB,EAApB;YAAA;UAAA,CAAoB;UAAEoB,OAAK,EAAEC,QAAA,CAAAC;;UAX/DrB,OAAA,EAAAC,QAAA,CAWyE,MAAEW,MAAA,QAAAA,MAAA,OAX3EU,gBAAA,CAWyE,IAAE,E;UAX3EP,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}