{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, {\n    class: \"box-card\",\n    style: {\n      \"max-width\": \"500px\",\n      \"margin\": \"40px auto\"\n    }\n  }, {\n    default: _withCtx(() => [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", {\n      style: {\n        \"text-align\": \"center\"\n      }\n    }, \"学生注册\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n      model: $data.form,\n      \"label-width\": \"80px\",\n      style: {\n        \"margin-top\": \"20px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"姓名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.name = $event),\n          placeholder: \"请输入姓名\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"邮箱\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.email,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.email = $event),\n          placeholder: \"请输入邮箱\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $data.form.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.form.password = $event),\n          placeholder: \"请输入密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"年龄\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.age,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.form.age = $event),\n          placeholder: \"请输入年龄\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"年级\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.grade,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.grade = $event),\n          placeholder: \"请输入年级\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"科目\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.subjects,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.form.subjects = $event),\n          placeholder: \"用逗号分隔\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"需求\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"textarea\",\n          modelValue: $data.form.needs,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.form.needs = $event),\n          placeholder: \"请输入学习需求\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.onSubmit\n        }, {\n          default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"注册\")])),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_card","class","style","default","_withCtx","_createElementVNode","_createVNode","_component_el_form","model","$data","form","_component_el_form_item","label","_component_el_input","modelValue","name","_cache","$event","placeholder","_","email","type","password","age","grade","subjects","needs","_component_el_button","onClick","$options","onSubmit","_createTextVNode"],"sources":["D:\\Code\\coding\\edu-platform\\student-app\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"box-card\" style=\"max-width: 500px; margin: 40px auto;\">\r\n    <h2 style=\"text-align:center;\">学生注册</h2>\r\n    <el-form :model=\"form\" label-width=\"80px\" style=\"margin-top: 20px;\">\r\n      <el-form-item label=\"姓名\">\r\n        <el-input v-model=\"form.name\" placeholder=\"请输入姓名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\">\r\n        <el-input v-model=\"form.email\" placeholder=\"请输入邮箱\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"密码\">\r\n        <el-input type=\"password\" v-model=\"form.password\" placeholder=\"请输入密码\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"年龄\">\r\n        <el-input v-model=\"form.age\" placeholder=\"请输入年龄\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"年级\">\r\n        <el-input v-model=\"form.grade\" placeholder=\"请输入年级\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"科目\">\r\n        <el-input v-model=\"form.subjects\" placeholder=\"用逗号分隔\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"需求\">\r\n        <el-input type=\"textarea\" v-model=\"form.needs\" placeholder=\"请输入学习需求\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"onSubmit\">注册</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        role: 'student',\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        age: '',\r\n        grade: '',\r\n        subjects: '',\r\n        needs: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async onSubmit() {\r\n      const profile = {\r\n        age: this.form.age,\r\n        grade: this.form.grade,\r\n        subjects: this.form.subjects.split(','),\r\n        needs: this.form.needs\r\n      }\r\n      try {\r\n        await axios.post('http://localhost:5000/api/auth/register', {\r\n          role: this.form.role,\r\n          name: this.form.name,\r\n          email: this.form.email,\r\n          password: this.form.password,\r\n          profile\r\n        })\r\n        this.$message.success('注册成功，请登录')\r\n        this.$router.push('/login')\r\n      } catch (err) {\r\n        this.$message.error('注册失败: ' + err.response.data.msg)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}