{"ast":null,"code":"export default {\n  name: 'NavBar',\n  data() {\n    return {\n      isLoggedIn: false,\n      userName: '',\n      userAvatar: ''\n    };\n  },\n  computed: {\n    userInitial() {\n      return this.userName ? this.userName.charAt(0).toUpperCase() : '?';\n    }\n  },\n  created() {\n    // 检查是否已登录\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    if (userId && userName) {\n      this.isLoggedIn = true;\n      this.userName = userName;\n      this.userAvatar = localStorage.getItem('userAvatar') || '';\n    }\n  },\n  methods: {\n    logout() {\n      // 清除本地存储的用户信息\n      localStorage.removeItem('userId');\n      localStorage.removeItem('userName');\n      localStorage.removeItem('userAvatar');\n      localStorage.removeItem('userToken');\n      this.isLoggedIn = false;\n      this.userName = '';\n      this.userAvatar = '';\n\n      // 跳转到登录页\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["name","data","isLoggedIn","userName","userAvatar","computed","userInitial","charAt","toUpperCase","created","userId","localStorage","getItem","methods","logout","removeItem","$router","push"],"sources":["D:\\Code\\coding\\edu-platform\\student-app\\src\\components\\NavBar.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar\">\r\n    <div class=\"navbar-container\">\r\n      <router-link to=\"/\" class=\"logo\">\r\n        <h1>jiaoyuziyuan</h1>\r\n      </router-link>\r\n      \r\n      <div class=\"menu\">\r\n        <router-link to=\"/\" class=\"menu-item\">首页</router-link>\r\n        <router-link to=\"/resources\" class=\"menu-item\">学习资源</router-link>\r\n        <router-link to=\"/consult\" class=\"menu-item\">在线咨询</router-link>\r\n        <router-link to=\"/ai-learning\" class=\"menu-item\">AI辅助学习</router-link>\r\n      </div>\r\n      \r\n      <div class=\"user-actions\">\r\n        <template v-if=\"isLoggedIn\">\r\n          <router-link to=\"/profile\" class=\"profile-link\">\r\n            <el-avatar :size=\"32\" :src=\"userAvatar\">{{ userInitial }}</el-avatar>\r\n            <span class=\"username\">{{ userName }}</span>\r\n          </router-link>\r\n          <el-button size=\"small\" @click=\"logout\" type=\"text\">退出</el-button>\r\n        </template>\r\n        <template v-else>\r\n          <router-link to=\"/login\">\r\n            <el-button size=\"small\" type=\"primary\">登录</el-button>\r\n          </router-link>\r\n          <router-link to=\"/register\">\r\n            <el-button size=\"small\">注册</el-button>\r\n          </router-link>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'NavBar',\r\n  data() {\r\n    return {\r\n      isLoggedIn: false,\r\n      userName: '',\r\n      userAvatar: ''\r\n    }\r\n  },\r\n  computed: {\r\n    userInitial() {\r\n      return this.userName ? this.userName.charAt(0).toUpperCase() : '?';\r\n    }\r\n  },\r\n  created() {\r\n    // 检查是否已登录\r\n    const userId = localStorage.getItem('userId');\r\n    const userName = localStorage.getItem('userName');\r\n    \r\n    if (userId && userName) {\r\n      this.isLoggedIn = true;\r\n      this.userName = userName;\r\n      this.userAvatar = localStorage.getItem('userAvatar') || '';\r\n    }\r\n  },\r\n  methods: {\r\n    logout() {\r\n      // 清除本地存储的用户信息\r\n      localStorage.removeItem('userId');\r\n      localStorage.removeItem('userName');\r\n      localStorage.removeItem('userAvatar');\r\n      localStorage.removeItem('userToken');\r\n      \r\n      this.isLoggedIn = false;\r\n      this.userName = '';\r\n      this.userAvatar = '';\r\n      \r\n      // 跳转到登录页\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.navbar {\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 100;\r\n}\r\n\r\n.navbar-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  height: 64px;\r\n}\r\n\r\n.logo {\r\n  text-decoration: none;\r\n  color: #1f4e79;\r\n}\r\n\r\n.logo h1 {\r\n  margin: 0;\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n}\r\n\r\n.menu {\r\n  display: flex;\r\n  gap: 24px;\r\n}\r\n\r\n.menu-item {\r\n  color: #333;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  padding: 8px 0;\r\n  position: relative;\r\n}\r\n\r\n.menu-item:hover {\r\n  color: #1f4e79;\r\n}\r\n\r\n.menu-item.router-link-active {\r\n  color: #1f4e79;\r\n  font-weight: 500;\r\n}\r\n\r\n.menu-item.router-link-active::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: #1f4e79;\r\n}\r\n\r\n.user-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.profile-link {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  text-decoration: none;\r\n  color: #333;\r\n}\r\n\r\n.username {\r\n  font-size: 14px;\r\n}\r\n</style> "],"mappings":"AAoCA,eAAe;EACbA,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACH,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAI,GAAG;IACpE;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMT,QAAO,GAAIQ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,IAAIF,MAAK,IAAKP,QAAQ,EAAE;MACtB,IAAI,CAACD,UAAS,GAAI,IAAI;MACtB,IAAI,CAACC,QAAO,GAAIA,QAAQ;MACxB,IAAI,CAACC,UAAS,GAAIO,YAAY,CAACC,OAAO,CAAC,YAAY,KAAK,EAAE;IAC5D;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP;MACAH,YAAY,CAACI,UAAU,CAAC,QAAQ,CAAC;MACjCJ,YAAY,CAACI,UAAU,CAAC,UAAU,CAAC;MACnCJ,YAAY,CAACI,UAAU,CAAC,YAAY,CAAC;MACrCJ,YAAY,CAACI,UAAU,CAAC,WAAW,CAAC;MAEpC,IAAI,CAACb,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,UAAS,GAAI,EAAE;;MAEpB;MACA,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}