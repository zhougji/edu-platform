{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/ai';\n\n// 发送消息到AI助手\nexport const sendMessage = async (message, chatId = null, subject = null) => {\n  try {\n    const body = {\n      message\n    };\n    if (chatId) body.chatId = chatId;\n    if (subject) body.subject = subject;\n    const response = await axios.post(`${API_URL}/chat`, body);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '发送消息失败');\n  }\n};\n\n// 获取AI会话列表\nexport const getAiChats = async (page = 1, limit = 10) => {\n  try {\n    const response = await axios.get(`${API_URL}/chats`, {\n      params: {\n        page,\n        limit\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '获取对话列表失败');\n  }\n};\n\n// 获取单个AI会话详情\nexport const getAiChatById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/chat/${id}`);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '获取对话详情失败');\n  }\n};\n\n// 更新AI会话信息\nexport const updateAiChat = async (id, data) => {\n  try {\n    const response = await axios.put(`${API_URL}/chat/${id}`, data);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '更新对话失败');\n  }\n};\n\n// 删除AI会话\nexport const deleteAiChat = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/chat/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '删除对话失败');\n  }\n};","map":{"version":3,"names":["axios","API_URL","sendMessage","message","chatId","subject","body","response","post","data","error","Error","getAiChats","page","limit","get","params","getAiChatById","id","updateAiChat","put","deleteAiChat","delete"],"sources":["D:/Code/coding/edu-platform/client/src/services/aiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/ai';\r\n\r\n// 发送消息到AI助手\r\nexport const sendMessage = async (message, chatId = null, subject = null) => {\r\n    try {\r\n        const body = { message };\r\n        if (chatId) body.chatId = chatId;\r\n        if (subject) body.subject = subject;\r\n\r\n        const response = await axios.post(`${API_URL}/chat`, body);\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '发送消息失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 获取AI会话列表\r\nexport const getAiChats = async (page = 1, limit = 10) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/chats`, {\r\n            params: { page, limit }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '获取对话列表失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 获取单个AI会话详情\r\nexport const getAiChatById = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/chat/${id}`);\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '获取对话详情失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 更新AI会话信息\r\nexport const updateAiChat = async (id, data) => {\r\n    try {\r\n        const response = await axios.put(`${API_URL}/chat/${id}`, data);\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '更新对话失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 删除AI会话\r\nexport const deleteAiChat = async (id) => {\r\n    try {\r\n        const response = await axios.delete(`${API_URL}/chat/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '删除对话失败'\r\n        );\r\n    }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,SAAS;;AAEzB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,GAAG,IAAI,EAAEC,OAAO,GAAG,IAAI,KAAK;EACzE,IAAI;IACA,MAAMC,IAAI,GAAG;MAAEH;IAAQ,CAAC;IACxB,IAAIC,MAAM,EAAEE,IAAI,CAACF,MAAM,GAAGA,MAAM;IAChC,IAAIC,OAAO,EAAEC,IAAI,CAACD,OAAO,GAAGA,OAAO;IAEnC,MAAME,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,OAAO,EAAEK,IAAI,CAAC;IAC1D,OAAOC,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CACXD,KAAK,CAACH,QAAQ,EAAEE,IAAI,EAAEN,OAAO,IAAI,QACrC,CAAC;EACL;AACJ,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK;EACtD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,QAAQ,EAAE;MACjDe,MAAM,EAAE;QAAEH,IAAI;QAAEC;MAAM;IAC1B,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CACXD,KAAK,CAACH,QAAQ,EAAEE,IAAI,EAAEN,OAAO,IAAI,UACrC,CAAC;EACL;AACJ,CAAC;;AAED;AACA,OAAO,MAAMc,aAAa,GAAG,MAAOC,EAAE,IAAK;EACvC,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,SAASiB,EAAE,EAAE,CAAC;IACzD,OAAOX,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CACXD,KAAK,CAACH,QAAQ,EAAEE,IAAI,EAAEN,OAAO,IAAI,UACrC,CAAC;EACL;AACJ,CAAC;;AAED;AACA,OAAO,MAAMgB,YAAY,GAAG,MAAAA,CAAOD,EAAE,EAAET,IAAI,KAAK;EAC5C,IAAI;IACA,MAAMF,QAAQ,GAAG,MAAMP,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,SAASiB,EAAE,EAAE,EAAET,IAAI,CAAC;IAC/D,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CACXD,KAAK,CAACH,QAAQ,EAAEE,IAAI,EAAEN,OAAO,IAAI,QACrC,CAAC;EACL;AACJ,CAAC;;AAED;AACA,OAAO,MAAMkB,YAAY,GAAG,MAAOH,EAAE,IAAK;EACtC,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACsB,MAAM,CAAC,GAAGrB,OAAO,SAASiB,EAAE,EAAE,CAAC;IAC5D,OAAOX,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CACXD,KAAK,CAACH,QAAQ,EAAEE,IAAI,EAAEN,OAAO,IAAI,QACrC,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}