{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/consultations';\n\n// 获取教师列表\nexport const getTeachers = async (params = {}) => {\n  try {\n    const response = await axios.get(`${API_URL}/teachers`, {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '获取教师列表失败');\n  }\n};\n\n// 获取教师详情\nexport const getTeacherById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/teachers/${id}`);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '获取教师详情失败');\n  }\n};\n\n// 创建咨询请求\nexport const createConsultation = async consultationData => {\n  try {\n    const response = await axios.post(API_URL, consultationData);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '创建咨询请求失败');\n  }\n};\n\n// 获取咨询列表\nexport const getConsultations = async (params = {}) => {\n  try {\n    const response = await axios.get(API_URL, {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '获取咨询列表失败');\n  }\n};\n\n// 获取咨询详情\nexport const getConsultationById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '获取咨询详情失败');\n  }\n};\n\n// 更新咨询状态（教师使用）\nexport const updateConsultationStatus = async (id, status) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}/status`, {\n      status\n    });\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '更新咨询状态失败');\n  }\n};\n\n// 发送咨询消息\nexport const sendConsultationMessage = async (id, content) => {\n  try {\n    const response = await axios.post(`${API_URL}/${id}/messages`, {\n      content\n    });\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '发送消息失败');\n  }\n};\n\n// 提交咨询反馈（学生使用）\nexport const submitConsultationFeedback = async (id, feedbackData) => {\n  try {\n    const response = await axios.post(`${API_URL}/${id}/feedback`, feedbackData);\n    return response.data.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '提交反馈失败');\n  }\n};\n\n// 取消咨询请求（学生使用）\nexport const cancelConsultation = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || '取消咨询请求失败');\n  }\n};","map":{"version":3,"names":["axios","API_URL","getTeachers","params","response","get","data","error","Error","message","getTeacherById","id","createConsultation","consultationData","post","getConsultations","getConsultationById","updateConsultationStatus","status","put","sendConsultationMessage","content","submitConsultationFeedback","feedbackData","cancelConsultation","delete"],"sources":["D:/Code/coding/edu-platform/client/src/services/consultationService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/consultations';\r\n\r\n// 获取教师列表\r\nexport const getTeachers = async (params = {}) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/teachers`, { params });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '获取教师列表失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 获取教师详情\r\nexport const getTeacherById = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/teachers/${id}`);\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '获取教师详情失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 创建咨询请求\r\nexport const createConsultation = async (consultationData) => {\r\n    try {\r\n        const response = await axios.post(API_URL, consultationData);\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '创建咨询请求失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 获取咨询列表\r\nexport const getConsultations = async (params = {}) => {\r\n    try {\r\n        const response = await axios.get(API_URL, { params });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '获取咨询列表失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 获取咨询详情\r\nexport const getConsultationById = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/${id}`);\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '获取咨询详情失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 更新咨询状态（教师使用）\r\nexport const updateConsultationStatus = async (id, status) => {\r\n    try {\r\n        const response = await axios.put(`${API_URL}/${id}/status`, { status });\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '更新咨询状态失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 发送咨询消息\r\nexport const sendConsultationMessage = async (id, content) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/${id}/messages`, { content });\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '发送消息失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 提交咨询反馈（学生使用）\r\nexport const submitConsultationFeedback = async (id, feedbackData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/${id}/feedback`, feedbackData);\r\n        return response.data.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '提交反馈失败'\r\n        );\r\n    }\r\n};\r\n\r\n// 取消咨询请求（学生使用）\r\nexport const cancelConsultation = async (id) => {\r\n    try {\r\n        const response = await axios.delete(`${API_URL}/${id}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(\r\n            error.response?.data?.message || '取消咨询请求失败'\r\n        );\r\n    }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}