{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-page\"\n};\nconst _hoisted_2 = {\n  class: \"chat-sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"chat-main\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"error-overlay\"\n};\nconst _hoisted_6 = {\n  class: \"chat-header\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"title-edit-form\"\n};\nconst _hoisted_8 = {\n  class: \"title-input-group\"\n};\nconst _hoisted_9 = {\n  class: \"title-actions\"\n};\nconst _hoisted_10 = {\n  class: \"chat-meta\"\n};\nconst _hoisted_11 = {\n  class: \"chat-subject\"\n};\nconst _hoisted_12 = {\n  class: \"chat-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AIChatHistory = _resolveComponent(\"AIChatHistory\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_AIChat = _resolveComponent(\"AIChat\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_AIChatHistory, {\n    chats: $setup.chatHistory,\n    onDeleteChat: $setup.handleDeleteChat\n  }, null, 8 /* PROPS */, [\"chats\", \"onDeleteChat\"])]), _createElementVNode(\"div\", _hoisted_3, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _cache[6] || (_cache[6] = [_createElementVNode(\"i\", {\n    class: \"fas fa-spinner fa-spin\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"span\", null, \"加载中...\", -1 /* HOISTED */)]))) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"i\", {\n    class: \"fas fa-exclamation-circle\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"span\", null, _toDisplayString($setup.error), 1 /* TEXT */), _createVNode(_component_router_link, {\n    to: \"/student/ai\",\n    class: \"back-btn\"\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"返回AI助手\")])),\n    _: 1 /* STABLE */\n  })])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 2\n  }, [_createElementVNode(\"div\", _hoisted_6, [$setup.isEditingTitle ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTitle = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $setup.handleTitleUpdate && $setup.handleTitleUpdate(...args), [\"enter\"])),\n    onBlur: _cache[2] || (_cache[2] = (...args) => $setup.handleTitleUpdate && $setup.handleTitleUpdate(...args)),\n    class: \"title-input\",\n    ref: \"titleInput\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.newTitle]]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.handleTitleUpdate && $setup.handleTitleUpdate(...args)),\n    class: \"save-btn\",\n    title: \"保存\"\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"i\", {\n    class: \"fas fa-check\"\n  }, null, -1 /* HOISTED */)])), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.cancelTitleEdit && $setup.cancelTitleEdit(...args)),\n    class: \"cancel-btn\",\n    title: \"取消\"\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"i\", {\n    class: \"fas fa-times\"\n  }, null, -1 /* HOISTED */)]))])])])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"chat-title\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.startEditingTitle && $setup.startEditingTitle(...args))\n  }, [_createElementVNode(\"h2\", null, _toDisplayString($setup.chat?.title || '新会话'), 1 /* TEXT */), _cache[11] || (_cache[11] = _createElementVNode(\"button\", {\n    class: \"edit-title-btn\",\n    title: \"编辑标题\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-edit\"\n  })], -1 /* HOISTED */))])), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", _hoisted_11, [_cache[12] || (_cache[12] = _createElementVNode(\"i\", {\n    class: \"fas fa-tag\"\n  }, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.chat?.subject || '通用'), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_AIChat, {\n    chat: $setup.chat,\n    onChatUpdate: $setup.handleChatUpdate\n  }, null, 8 /* PROPS */, [\"chat\", \"onChatUpdate\"])])], 64 /* STABLE_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_AIChatHistory","chats","$setup","chatHistory","onDeleteChat","handleDeleteChat","_hoisted_3","loading","_hoisted_4","_cache","error","_hoisted_5","_toDisplayString","_component_router_link","to","default","_withCtx","_createTextVNode","_","_Fragment","_hoisted_6","isEditingTitle","_hoisted_7","_hoisted_8","type","$event","newTitle","onKeyup","_withKeys","args","handleTitleUpdate","onBlur","ref","_hoisted_9","onClick","title","cancelTitleEdit","startEditingTitle","chat","_hoisted_10","_hoisted_11","subject","_hoisted_12","_component_AIChat","onChatUpdate","handleChatUpdate"],"sources":["D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\AiChatPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-page\">\r\n    <div class=\"chat-sidebar\">\r\n      <AIChatHistory :chats=\"chatHistory\" :onDeleteChat=\"handleDeleteChat\" />\r\n    </div>\r\n\r\n    <div class=\"chat-main\">\r\n      <div v-if=\"loading\" class=\"loading-overlay\">\r\n        <i class=\"fas fa-spinner fa-spin\"></i>\r\n        <span>加载中...</span>\r\n      </div>\r\n      <div v-else-if=\"error\" class=\"error-overlay\">\r\n        <i class=\"fas fa-exclamation-circle\"></i>\r\n        <span>{{ error }}</span>\r\n        <router-link to=\"/student/ai\" class=\"back-btn\">返回AI助手</router-link>\r\n      </div>\r\n      <template v-else>\r\n        <div class=\"chat-header\">\r\n          <div v-if=\"isEditingTitle\" class=\"title-edit-form\">\r\n            <div class=\"title-input-group\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"newTitle\"\r\n                @keyup.enter=\"handleTitleUpdate\"\r\n                @blur=\"handleTitleUpdate\"\r\n                class=\"title-input\"\r\n                ref=\"titleInput\"\r\n              />\r\n              <div class=\"title-actions\">\r\n                <button @click=\"handleTitleUpdate\" class=\"save-btn\" title=\"保存\">\r\n                  <i class=\"fas fa-check\"></i>\r\n                </button>\r\n                <button @click=\"cancelTitleEdit\" class=\"cancel-btn\" title=\"取消\">\r\n                  <i class=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div v-else class=\"chat-title\" @click=\"startEditingTitle\">\r\n            <h2>{{ chat?.title || '新会话' }}</h2>\r\n            <button class=\"edit-title-btn\" title=\"编辑标题\">\r\n              <i class=\"fas fa-edit\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <div class=\"chat-meta\">\r\n            <span class=\"chat-subject\">\r\n              <i class=\"fas fa-tag\"></i> {{ chat?.subject || '通用' }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-content\">\r\n          <AIChat :chat=\"chat\" :onChatUpdate=\"handleChatUpdate\" />\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted, nextTick } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport AIChat from '../../components/ai/AIChat.vue'\r\nimport AIChatHistory from '../../components/ai/AIChatHistory.vue'\r\nimport { getAiChatById, getAiChats, deleteAiChat, updateAiChat } from '../../services/aiService'\r\n\r\nexport default {\r\n  name: 'AiChatPage',\r\n  components: {\r\n    AIChat,\r\n    AIChatHistory\r\n  },\r\n  setup() {\r\n    const route = useRoute()\r\n    const router = useRouter()\r\n    const titleInput = ref(null)\r\n\r\n    const id = computed(() => route.params.id)\r\n    const isNewChat = computed(() => id.value === 'new')\r\n\r\n    const chat = ref(null)\r\n    const chatHistory = ref([])\r\n    const loading = ref(!isNewChat.value)\r\n    const error = ref('')\r\n    const historyLoading = ref(true)\r\n    const isEditingTitle = ref(false)\r\n    const newTitle = ref('')\r\n\r\n    // 加载当前会话数据\r\n    onMounted(async () => {\r\n      if (isNewChat.value) {\r\n        loading.value = false\r\n        return\r\n      }\r\n\r\n      try {\r\n        loading.value = true\r\n        const chatData = await getAiChatById(id.value)\r\n        chat.value = chatData\r\n        newTitle.value = chatData.title\r\n        loading.value = false\r\n      } catch (err) {\r\n        error.value = err.message || '加载会话失败'\r\n        loading.value = false\r\n        console.error('加载会话错误:', err)\r\n      }\r\n\r\n      // 加载会话历史\r\n      try {\r\n        historyLoading.value = true\r\n        const result = await getAiChats()\r\n        chatHistory.value = result.data\r\n        historyLoading.value = false\r\n      } catch (err) {\r\n        console.error('加载会话历史错误:', err)\r\n        historyLoading.value = false\r\n      }\r\n    })\r\n\r\n    // 删除会话\r\n    const handleDeleteChat = async (chatId) => {\r\n      if (!confirm('确定要删除这个会话吗？这将无法恢复。')) {\r\n        return\r\n      }\r\n\r\n      try {\r\n        await deleteAiChat(chatId)\r\n\r\n        // 如果删除的是当前会话，则返回AI助手主页\r\n        if (chatId === id.value) {\r\n          router.push('/student/ai')\r\n          return\r\n        }\r\n\r\n        // 更新会话历史列表\r\n        chatHistory.value = chatHistory.value.filter(c => c._id !== chatId)\r\n      } catch (err) {\r\n        alert(`删除会话失败: ${err.message}`)\r\n        console.error('删除会话错误:', err)\r\n      }\r\n    }\r\n\r\n    // 更新会话数据\r\n    const handleChatUpdate = (updatedChat) => {\r\n      chat.value = updatedChat\r\n\r\n      // 如果是新会话，获取到ID后更新URL\r\n      if (isNewChat.value && updatedChat._id) {\r\n        router.replace(`/student/ai/chat/${updatedChat._id}`)\r\n\r\n        // 刷新会话历史\r\n        refreshChatHistory()\r\n      } else {\r\n        // 更新会话历史中的会话标题\r\n        chatHistory.value = chatHistory.value.map(c => \r\n          c._id === updatedChat._id ? { ...c, title: updatedChat.title } : c\r\n        )\r\n      }\r\n    }\r\n\r\n    // 刷新会话历史\r\n    const refreshChatHistory = async () => {\r\n      try {\r\n        const result = await getAiChats()\r\n        chatHistory.value = result.data\r\n      } catch (err) {\r\n        console.error('刷新会话历史错误:', err)\r\n      }\r\n    }\r\n\r\n    // 开始编辑标题\r\n    const startEditingTitle = () => {\r\n      if (!chat.value) return\r\n\r\n      isEditingTitle.value = true\r\n      newTitle.value = chat.value.title\r\n\r\n      // 等待DOM更新后聚焦输入框\r\n      nextTick(() => {\r\n        titleInput.value.focus()\r\n      })\r\n    }\r\n\r\n    // 取消编辑标题\r\n    const cancelTitleEdit = () => {\r\n      isEditingTitle.value = false\r\n      newTitle.value = chat.value.title\r\n    }\r\n\r\n    // 更新标题\r\n    const handleTitleUpdate = async () => {\r\n      if (!chat.value) return\r\n\r\n      try {\r\n        // 只有当标题发生变化时才更新\r\n        if (newTitle.value.trim() !== chat.value.title) {\r\n          const updatedChat = await updateAiChat(chat.value._id, { title: newTitle.value.trim() })\r\n          chat.value = updatedChat\r\n\r\n          // 更新会话历史中的会话标题\r\n          chatHistory.value = chatHistory.value.map(c => \r\n            c._id === updatedChat._id ? { ...c, title: updatedChat.title } : c\r\n          )\r\n        }\r\n\r\n        // 退出编辑模式\r\n        isEditingTitle.value = false\r\n      } catch (err) {\r\n        alert(`更新标题失败: ${err.message}`)\r\n        console.error('更新标题错误:', err)\r\n      }\r\n    }\r\n\r\n    return {\r\n      id,\r\n      isNewChat,\r\n      chat,\r\n      chatHistory,\r\n      loading,\r\n      error,\r\n      historyLoading,\r\n      isEditingTitle,\r\n      newTitle,\r\n      titleInput,\r\n      handleDeleteChat,\r\n      handleChatUpdate,\r\n      startEditingTitle,\r\n      cancelTitleEdit,\r\n      handleTitleUpdate\r\n    }\r\n  }\r\n}\r\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}