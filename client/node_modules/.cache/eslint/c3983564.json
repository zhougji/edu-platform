[{"D:\\Code\\coding\\edu-platform\\client\\src\\main.js":"1","D:\\Code\\coding\\edu-platform\\client\\src\\App.vue":"2","D:\\Code\\coding\\edu-platform\\client\\src\\router\\index.js":"3","D:\\Code\\coding\\edu-platform\\client\\src\\views\\Home.vue":"4","D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\AiAssistant.vue":"5","D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\AiChatPage.vue":"6","D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationDetail.vue":"7","D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationFeedback.vue":"8","D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationRoom.vue":"9","D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationList.vue":"10","D:\\Code\\coding\\edu-platform\\client\\src\\services\\authService.js":"11","D:\\Code\\coding\\edu-platform\\client\\src\\components\\ai\\AIToolCard.vue":"12","D:\\Code\\coding\\edu-platform\\client\\src\\components\\ai\\AIChat.vue":"13","D:\\Code\\coding\\edu-platform\\client\\src\\components\\ai\\AIChatHistory.vue":"14","D:\\Code\\coding\\edu-platform\\client\\src\\services\\consultationService.js":"15","D:\\Code\\coding\\edu-platform\\client\\src\\services\\aiService.js":"16","D:\\Code\\coding\\edu-platform\\client\\src\\services\\socketService.js":"17"},{"size":180,"mtime":1743949720952,"results":"18","hashOfConfig":"19"},{"size":114,"mtime":1743949720917,"results":"20","hashOfConfig":"19"},{"size":2448,"mtime":1743949721011,"results":"21","hashOfConfig":"19"},{"size":1033,"mtime":1743951530527,"results":"22","hashOfConfig":"19"},{"size":6458,"mtime":1743949720920,"results":"23","hashOfConfig":"19"},{"size":6828,"mtime":1743951530527,"results":"24","hashOfConfig":"19"},{"size":7560,"mtime":1743951530527,"results":"25","hashOfConfig":"19"},{"size":5649,"mtime":1743951120205,"results":"26","hashOfConfig":"19"},{"size":9655,"mtime":1743951530592,"results":"27","hashOfConfig":"19"},{"size":9658,"mtime":1743951530592,"results":"28","hashOfConfig":"19"},{"size":4283,"mtime":1743949084629,"results":"29","hashOfConfig":"19"},{"size":514,"mtime":1743949720918,"results":"30","hashOfConfig":"19"},{"size":6530,"mtime":1743949720918,"results":"31","hashOfConfig":"19"},{"size":2847,"mtime":1743951530527,"results":"32","hashOfConfig":"19"},{"size":3246,"mtime":1743945470152,"results":"33","hashOfConfig":"19"},{"size":1932,"mtime":1743946573244,"results":"34","hashOfConfig":"19"},{"size":4302,"mtime":1743945758920,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4p3gir",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Code\\coding\\edu-platform\\client\\src\\main.js",[],"D:\\Code\\coding\\edu-platform\\client\\src\\App.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\router\\index.js",[],"D:\\Code\\coding\\edu-platform\\client\\src\\views\\Home.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\AiAssistant.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\AiChatPage.vue",["72","73","74"],"D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationDetail.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationFeedback.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationRoom.vue",["75"],"<template>\r\n    <div class=\"consultation-room\">\r\n        <div v-if=\"loading\" class=\"loading-state\">\r\n            <i class=\"fas fa-spinner fa-spin\"></i>\r\n            <p>正在进入咨询室...</p>\r\n        </div>\r\n\r\n        <div v-else-if=\"error\" class=\"error-state\">\r\n            <i class=\"fas fa-exclamation-circle\"></i>\r\n            <p>{{ error }}</p>\r\n            <router-link to=\"/student/consultations\" class=\"back-button\">\r\n                返回咨询列表\r\n            </router-link>\r\n        </div>\r\n\r\n        <template v-else>\r\n            <div class=\"room-header\">\r\n                <div class=\"header-left\">\r\n                    <router-link :to=\"`/student/consultation/detail/${id}`\" class=\"back-link\">\r\n                        <i class=\"fas fa-arrow-left\"></i> 返回咨询详情\r\n                    </router-link>\r\n                    <h1>启明隅在线咨询室</h1>\r\n                </div>\r\n                <div class=\"header-right\">\r\n                    <div class=\"teacher-info\">\r\n                        <img :src=\"consultation.teacher.avatar || '/images/default-avatar.jpg'\"\r\n                            :alt=\"consultation.teacher.name\" class=\"teacher-avatar\" />\r\n                        <div class=\"teacher-name\">{{ consultation.teacher.name }} 老师</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"messages-container\" ref=\"messagesContainer\">\r\n                <div v-if=\"messages.length === 0\" class=\"empty-messages\">\r\n                    <i class=\"fas fa-comments\"></i>\r\n                    <p>咨询已开始，请发送消息</p>\r\n                </div>\r\n\r\n                <template v-else>\r\n                    <div v-for=\"(msg, index) in messages\" :key=\"index\"\r\n                        :class=\"['message', msg.sender === currentUser._id ? 'outgoing' : 'incoming']\">\r\n                        <div class=\"message-content\">\r\n                            <div class=\"message-text\">{{ msg.content }}</div>\r\n                            <div class=\"message-time\">{{ formatTime(msg.createdAt) }}</div>\r\n                            <div v-if=\"msg.read && msg.sender === currentUser._id\" class=\"message-status\">\r\n                                <i class=\"fas fa-check\"></i> 已读\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n\r\n                <div ref=\"messagesEnd\"></div>\r\n            </div>\r\n\r\n            <div class=\"message-input-container\">\r\n                <form @submit.prevent=\"handleSendMessage\" class=\"message-form\">\r\n                    <textarea v-model=\"newMessage\" placeholder=\"输入消息...\" ref=\"messageInput\" class=\"message-textarea\"\r\n                        :disabled=\"sending\" @keydown=\"handleKeyDown\"></textarea>\r\n\r\n                    <button type=\"submit\" class=\"send-button\" :disabled=\"sending || !newMessage.trim()\">\r\n                        <i v-if=\"sending\" class=\"fas fa-spinner fa-spin\"></i>\r\n                        <i v-else class=\"fas fa-paper-plane\"></i>\r\n                        发送\r\n                    </button>\r\n                </form>\r\n\r\n                <div class=\"input-tips\">\r\n                    按Enter键发送，Shift+Enter换行\r\n                </div>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, onUnmounted, nextTick } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { format } from 'date-fns'\r\nimport { getConsultationById } from '../../services/consultationService'\r\nimport { getCurrentUser } from '../../services/authService'\r\nimport {\r\n    initSocket,\r\n    joinConsultation,\r\n    sendMessage,\r\n    onNewMessage,\r\n    markMessagesAsRead,\r\n    onMessagesRead,\r\n    onConsultationEnded\r\n} from '../../services/socketService'\r\n\r\nexport default {\r\n    name: 'ConsultationRoom',\r\n    setup() {\r\n        const route = useRoute()\r\n        // eslint-disable-next-line no-unused-vars\r\n        const router = useRouter()\r\n        const { id } = route.params\r\n\r\n        const consultation = ref(null)\r\n        const messages = ref([])\r\n        const loading = ref(true)\r\n        const error = ref('')\r\n        const newMessage = ref('')\r\n        const sending = ref(false)\r\n        const messagesContainer = ref(null)\r\n        const messagesEnd = ref(null)\r\n        const messageInput = ref(null)\r\n\r\n        const currentUser = getCurrentUser()\r\n        let socket = null\r\n\r\n        // 滚动到最新消息\r\n        const scrollToBottom = () => {\r\n            nextTick(() => {\r\n                if (messagesEnd.value) {\r\n                    messagesEnd.value.scrollIntoView({ behavior: 'smooth' })\r\n                }\r\n            })\r\n        }\r\n\r\n        // 格式化消息时间\r\n        const formatTime = (dateString) => {\r\n            return format(new Date(dateString), 'HH:mm')\r\n        }\r\n\r\n        // 处理发送消息\r\n        const handleSendMessage = async () => {\r\n            if (!newMessage.value.trim() || sending.value) return\r\n\r\n            try {\r\n                sending.value = true\r\n\r\n                // 发送消息\r\n                const sentMessage = await sendMessage(consultation.value._id, newMessage.value)\r\n\r\n                // 添加到本地消息列表\r\n                messages.value.push(sentMessage)\r\n\r\n                // 清空输入框并滚动到底部\r\n                newMessage.value = ''\r\n                scrollToBottom()\r\n\r\n                sending.value = false\r\n\r\n                // 聚焦输入框\r\n                nextTick(() => {\r\n                    if (messageInput.value) {\r\n                        messageInput.value.focus()\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                error.value = '发送消息失败，请重试'\r\n                sending.value = false\r\n                console.error('发送消息错误:', err)\r\n            }\r\n        }\r\n\r\n        // 处理键盘事件\r\n        const handleKeyDown = (e) => {\r\n            // Enter发送，Shift+Enter换行\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n                e.preventDefault()\r\n                handleSendMessage()\r\n            }\r\n        }\r\n\r\n        // 初始化咨询室\r\n        onMounted(async () => {\r\n            try {\r\n                loading.value = true\r\n\r\n                // 获取咨询详情\r\n                const data = await getConsultationById(id)\r\n                consultation.value = data\r\n\r\n                // 检查咨询状态\r\n                if (data.status !== 'accepted' && data.status !== 'completed') {\r\n                    error.value = '咨询尚未开始或已结束'\r\n                    loading.value = false\r\n                    return\r\n                }\r\n\r\n                // 初始化Socket连接\r\n                socket = initSocket()\r\n\r\n                // 加入咨询房间\r\n                const roomData = await joinConsultation(id)\r\n                messages.value = roomData.messages || []\r\n\r\n                // 监听新消息\r\n                onNewMessage((newMsg) => {\r\n                    messages.value.push(newMsg)\r\n                    scrollToBottom()\r\n\r\n                    // 如果不是自己发的消息，标记为已读\r\n                    if (newMsg.sender !== currentUser._id) {\r\n                        markMessagesAsRead(id)\r\n                    }\r\n                })\r\n\r\n                // 监听消息已读状态\r\n                onMessagesRead((data) => {\r\n                    if (data.consultationId === id) {\r\n                        // 更新消息已读状态\r\n                        messages.value = messages.value.map(msg =>\r\n                            msg.sender === currentUser._id ? { ...msg, read: true } : msg\r\n                        )\r\n                    }\r\n                })\r\n\r\n                // 监听咨询结束\r\n                onConsultationEnded((data) => {\r\n                    if (data.consultationId === id) {\r\n                        // 显示咨询结束提示\r\n                        alert('咨询已结束')\r\n                        // 刷新咨询状态\r\n                        consultation.value = { ...consultation.value, status: 'completed' }\r\n                    }\r\n                })\r\n\r\n                // 标记消息为已读\r\n                if (messages.value.some(msg => msg.sender !== currentUser._id && !msg.read)) {\r\n                    markMessagesAsRead(id)\r\n                }\r\n\r\n                loading.value = false\r\n                scrollToBottom()\r\n\r\n                // 聚焦输入框\r\n                nextTick(() => {\r\n                    if (messageInput.value) {\r\n                        messageInput.value.focus()\r\n                    }\r\n                })\r\n            } catch (err) {\r\n                error.value = err.message || '加载咨询室失败'\r\n                loading.value = false\r\n                console.error('加载咨询室错误:', err)\r\n            }\r\n        })\r\n\r\n        // 组件销毁时清理\r\n        onUnmounted(() => {\r\n            // 清理任何监听器\r\n            if (socket) {\r\n                socket.off('newMessage')\r\n                socket.off('messagesRead')\r\n                socket.off('consultationEnded')\r\n            }\r\n        })\r\n\r\n        return {\r\n            id,\r\n            consultation,\r\n            messages,\r\n            loading,\r\n            error,\r\n            newMessage,\r\n            sending,\r\n            currentUser,\r\n            messagesContainer,\r\n            messagesEnd,\r\n            messageInput,\r\n            formatTime,\r\n            handleSendMessage,\r\n            handleKeyDown\r\n        }\r\n    }\r\n}\r\n</script>","D:\\Code\\coding\\edu-platform\\client\\src\\views\\student\\ConsultationList.vue",["76","77"],"<template>\r\n  <div class=\"consultation-list-page\">\r\n    <div class=\"consultation-list-header\">\r\n      <h1>启明隅在线咨询</h1>\r\n      <p>与专业教师一对一交流，解决您的学习难题</p>\r\n    </div>\r\n\r\n    <div class=\"page-header\">\r\n      <h1>我的咨询</h1>\r\n      <router-link to=\"/student/consultation/teachers\" class=\"new-consultation-btn\">\r\n        <i class=\"fas fa-plus\"></i> 新咨询\r\n      </router-link>\r\n    </div>\r\n\r\n    <div class=\"consultations-container\">\r\n      <!-- 分类标签 -->\r\n      <div class=\"consultation-tabs\">\r\n        <button v-for=\"tab in tabs\" :key=\"tab.value\" :class=\"['tab-button', activeTab === tab.value ? 'active' : '']\"\r\n          @click=\"activeTab = tab.value\">\r\n          {{ tab.label }}\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"consultations-content\">\r\n        <div v-if=\"loading\" class=\"loading-state\">\r\n          <i class=\"fas fa-spinner fa-spin\"></i>\r\n          <p>加载咨询列表中...</p>\r\n        </div>\r\n        <div v-else-if=\"error\" class=\"error-state\">\r\n          <i class=\"fas fa-exclamation-circle\"></i>\r\n          <p>{{ error }}</p>\r\n          <button @click=\"loadConsultations\" class=\"retry-btn\">\r\n            <i class=\"fas fa-redo\"></i> 重试\r\n          </button>\r\n        </div>\r\n        <div v-else-if=\"consultations.length === 0\" class=\"empty-consultations\">\r\n          <img src=\"/images/empty-consultation.svg\" alt=\"暂无咨询\" />\r\n          <h3>您还没有发起过咨询</h3>\r\n          <p>启明隅在线咨询让您与专业教师一对一交流</p>\r\n          <router-link to=\"/student/consultation/teachers\" class=\"new-consultation-btn\">\r\n            <i class=\"fas fa-plus-circle\"></i> 寻找教师咨询\r\n          </router-link>\r\n        </div>\r\n        <div v-else-if=\"filteredConsultations.length === 0\" class=\"no-consultations\">\r\n          <i class=\"fas fa-comments\"></i>\r\n          <h3>暂无{{ activeTab !== 'all' ? `${getStatusText(activeTab)}的` : '' }}咨询记录</h3>\r\n          <router-link to=\"/student/consultation/teachers\" class=\"find-teacher-btn\">\r\n            寻找教师咨询\r\n          </router-link>\r\n        </div>\r\n        <div v-else class=\"consultation-list\">\r\n          <div v-for=\"consultation in filteredConsultations\" :key=\"consultation._id\" class=\"consultation-card\">\r\n            <div class=\"card-header\">\r\n              <div class=\"teacher-info\">\r\n                <img :src=\"consultation.teacher.avatar || '/images/default-avatar.jpg'\" :alt=\"consultation.teacher.name\"\r\n                  class=\"teacher-avatar\" />\r\n                <span class=\"teacher-name\">{{ consultation.teacher.name }}</span>\r\n              </div>\r\n              <div :class=\"['status-badge', getStatusClass(consultation.status)]\">\r\n                {{ getStatusText(consultation.status) }}\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card-body\">\r\n              <div class=\"consultation-subject\">\r\n                <i class=\"fas fa-tag\"></i>\r\n                <span>{{ consultation.subject }}</span>\r\n              </div>\r\n\r\n              <div class=\"consultation-description\">\r\n                {{ consultation.description }}\r\n              </div>\r\n\r\n              <div class=\"consultation-time\">\r\n                <i class=\"far fa-clock\"></i>\r\n                <span>{{ formatDate(consultation.createdAt) }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"card-actions\">\r\n              <button v-if=\"consultation.status === 'pending'\" @click=\"handleCancel(consultation._id)\"\r\n                class=\"cancel-btn\">\r\n                <i class=\"fas fa-times\"></i> 取消咨询\r\n              </button>\r\n\r\n              <router-link v-if=\"consultation.status === 'accepted'\"\r\n                :to=\"`/student/consultation/room/${consultation._id}`\" class=\"enter-room-btn\">\r\n                <i class=\"fas fa-door-open\"></i> 进入咨询室\r\n              </router-link>\r\n\r\n              <router-link v-if=\"consultation.status === 'completed' && !consultation.studentReviewed\"\r\n                :to=\"`/student/consultation/completed/${consultation._id}`\" class=\"new-request-btn\">\r\n                <i class=\"fas fa-redo\"></i> 再次咨询\r\n              </router-link>\r\n\r\n              <router-link v-if=\"consultation.status === 'completed' && !consultation.feedback\"\r\n                :to=\"`/student/consultation/feedback/${consultation._id}`\" class=\"feedback-btn\">\r\n                <i class=\"fas fa-star\"></i> 评价咨询\r\n              </router-link>\r\n\r\n              <router-link :to=\"`/student/consultation/detail/${consultation._id}`\" class=\"view-detail-btn\">\r\n                <i class=\"fas fa-eye\"></i> 查看详情\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted, reactive, watch } from 'vue'\r\nimport { getConsultations, cancelConsultation } from '../../services/consultationService'\r\nimport { initSocket, onConsultationStatus, onConsultationReady } from '../../services/socketService'\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'ConsultationList',\r\n  setup() {\r\n    const router = useRouter()\r\n    const consultations = ref([])\r\n    const loading = ref(true)\r\n    const error = ref('')\r\n    const activeTab = ref('all')\r\n\r\n    // 标签列表\r\n    const tabs = [\r\n      { label: '全部咨询', value: 'all' },\r\n      { label: '待处理', value: 'pending' },\r\n      { label: '已接受', value: 'accepted' },\r\n      { label: '已完成', value: 'completed' },\r\n      { label: '已取消/拒绝', value: 'canceled,rejected' }\r\n    ]\r\n\r\n    // 根据当前选中标签过滤咨询列表\r\n    const filteredConsultations = computed(() => {\r\n      if (activeTab.value === 'all') {\r\n        return consultations.value\r\n      }\r\n\r\n      if (activeTab.value.includes(',')) {\r\n        const statuses = activeTab.value.split(',')\r\n        return consultations.value.filter(c => statuses.includes(c.status))\r\n      }\r\n\r\n      return consultations.value.filter(c => c.status === activeTab.value)\r\n    })\r\n\r\n    // 加载咨询列表\r\n    const loadConsultations = async () => {\r\n      try {\r\n        loading.value = true\r\n        error.value = ''\r\n        const result = await getConsultations()\r\n        consultations.value = result.data\r\n        loading.value = false\r\n      } catch (err) {\r\n        error.value = '加载咨询列表失败'\r\n        loading.value = false\r\n        console.error('加载咨询列表错误:', err)\r\n      }\r\n    }\r\n\r\n    // 取消咨询\r\n    const handleCancel = async (id) => {\r\n      if (!confirm('确定要取消这个咨询请求吗？')) {\r\n        return\r\n      }\r\n\r\n      try {\r\n        await cancelConsultation(id)\r\n        // 更新列表中的咨询状态\r\n        consultations.value = consultations.value.map(c =>\r\n          c._id === id ? { ...c, status: 'canceled' } : c\r\n        )\r\n      } catch (err) {\r\n        alert(`取消咨询失败: ${err.message}`)\r\n        console.error('取消咨询错误:', err)\r\n      }\r\n    }\r\n\r\n    // 格式化日期\r\n    const formatDate = (dateString) => {\r\n      const date = new Date(dateString)\r\n      return date.toLocaleString('zh-CN', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      })\r\n    }\r\n\r\n    // 获取状态文本\r\n    const getStatusText = (status) => {\r\n      switch (status) {\r\n        case 'pending': return '待处理'\r\n        case 'accepted': return '已接受'\r\n        case 'rejected': return '已拒绝'\r\n        case 'completed': return '已完成'\r\n        case 'canceled': return '已取消'\r\n        default: return status\r\n      }\r\n    }\r\n\r\n    // 获取状态样式类名\r\n    const getStatusClass = (status) => {\r\n      switch (status) {\r\n        case 'pending': return 'status-pending'\r\n        case 'accepted': return 'status-accepted'\r\n        case 'rejected': return 'status-rejected'\r\n        case 'completed': return 'status-completed'\r\n        case 'canceled': return 'status-canceled'\r\n        default: return ''\r\n      }\r\n    }\r\n\r\n    // 初始化WebSocket和加载数据\r\n    onMounted(() => {\r\n      // 初始化Socket\r\n      const socket = initSocket()\r\n\r\n      // 监听咨询状态变更\r\n      onConsultationStatus((updatedConsultation) => {\r\n        consultations.value = consultations.value.map(c =>\r\n          c._id === updatedConsultation._id ? updatedConsultation : c\r\n        )\r\n      })\r\n\r\n      // 监听咨询准备就绪事件\r\n      onConsultationReady((consultationId) => {\r\n        // 更新状态\r\n        consultations.value = consultations.value.map(c =>\r\n          c._id === consultationId ? { ...c, status: 'accepted' } : c\r\n        )\r\n\r\n        // 显示通知\r\n        const notification = new Notification('咨询已准备就绪', {\r\n          body: '您的咨询请求已被接受，点击进入咨询室',\r\n          icon: '/logo.png'\r\n        })\r\n\r\n        notification.onclick = () => {\r\n          window.focus()\r\n          router.push(`/student/consultation/room/${consultationId}`)\r\n        }\r\n      })\r\n\r\n      // 加载咨询列表\r\n      loadConsultations()\r\n\r\n      // 请求通知权限\r\n      if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\r\n        Notification.requestPermission()\r\n      }\r\n    })\r\n\r\n    return {\r\n      consultations,\r\n      loading,\r\n      error,\r\n      activeTab,\r\n      tabs,\r\n      filteredConsultations,\r\n      handleCancel,\r\n      loadConsultations,\r\n      formatDate,\r\n      getStatusText,\r\n      getStatusClass\r\n    }\r\n  }\r\n}\r\n</script>","D:\\Code\\coding\\edu-platform\\client\\src\\services\\authService.js",[],"D:\\Code\\coding\\edu-platform\\client\\src\\components\\ai\\AIToolCard.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\components\\ai\\AIChat.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\components\\ai\\AIChatHistory.vue",[],"D:\\Code\\coding\\edu-platform\\client\\src\\services\\consultationService.js",[],"D:\\Code\\coding\\edu-platform\\client\\src\\services\\aiService.js",[],"D:\\Code\\coding\\edu-platform\\client\\src\\services\\socketService.js",[],{"ruleId":"78","severity":2,"message":"79","line":56,"column":26,"nodeType":"80","messageId":"81","endLine":56,"endColumn":31},{"ruleId":"82","severity":2,"message":"83","line":73,"column":16,"nodeType":"80","messageId":"84","endLine":73,"endColumn":24},{"ruleId":"82","severity":2,"message":"83","line":74,"column":23,"nodeType":"80","messageId":"84","endLine":74,"endColumn":31},{"ruleId":"78","severity":2,"message":"85","line":95,"column":15,"nodeType":"80","messageId":"81","endLine":95,"endColumn":21},{"ruleId":"78","severity":2,"message":"86","line":246,"column":13,"nodeType":"80","messageId":"81","endLine":246,"endColumn":19},{"ruleId":"82","severity":2,"message":"87","line":270,"column":11,"nodeType":"80","messageId":"84","endLine":270,"endColumn":17},"no-unused-vars","'watch' is defined but never used.","Identifier","unusedVar","no-undef","'computed' is not defined.","undef","'router' is assigned a value but never used.","'socket' is assigned a value but never used.","'router' is not defined."]